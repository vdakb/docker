<?xml version="1.0" encoding="US-ASCII"?>
<project name           ="Identity Governance Workspace Targets"
         basedir        ="."
         xmlns:fmw      ="http://oracle.hst.deployment/fusion"
         xmlns:jps      ="http://oracle.hst.deployment/security"
         xmlns:wsm      ="http://oracle.hst.deployment/webservice"
         xmlns:server   ="http://oracle.hst.deployment/topology">
  <!--
  =====================================================================
  == properties globaly defined
  =====================================================================
  -->
  <import file="igd-context.xml"/>
  <!--
  =====================================================================
  == ANT macro to assemble a library
  =====================================================================
  -->
  <macrodef name="make-library">
    <attribute name="library"/>
    <attribute name="destination"/>
    <attribute name="include" default="**/*.xsd **/*.wsdl **/*.txt"/>
    <attribute name="exclude" default="**/*-ant.xml **/*-dm.xml"/>
    <sequential>
      <echo message="Assemble JEE archive from path ${output.dir}/${packagepath.library}"/>
      <copy todir="${output.dir}/META-INF" overwrite="true" preservelastmodified="false" verbose="no">
        <fileset dir="${source.dir}/META-INF">
          <include  name="NOTICE.txt"/>
          <include  name="LICENSE.txt"/>
        </fileset>
      </copy>
      <jar destfile="${deploy.dir}/@{library}.jar" manifest="${manifest}">
        <fileset dir="${output.dir}" includes="${packagepath.library} @{include}" excludes="@{exclude}"/>
        <fileset dir="${source.dir}" includes="META-INF/**/*.txt"/>
      </jar>
      <if>
        <!--
         | if a expression cannot be expanded by ant due to it isn't defined
         ] Ant set the value to the expresssion it self hence compare to that
         | expression means undefined
         -->
        <equals arg1="@{destination}" arg2="${destination.base}" trim="true"/>
        <then>
          <echo message="Nothing to copy from path ${deploy.dir} due to destination.base is undefined"/>
        </then>
        <else>
          <echo message="Copying java archive from path ${deploy.dir} to @{destination}"/>
          <for param="task" list="@{destination}">
            <sequential>
              <copy todir="@{task}/lib" overwrite="true" preservelastmodified="false" verbose="no">
                <fileset dir="${deploy.dir}">
                  <include  name="@{library}.jar"/>
                </fileset>
             </copy>
            </sequential>
          </for>
        </else>
      </if>
    </sequential>
  </macrodef>
    <!--
  =====================================================================
  == ANT macro to assemble a web application
  =====================================================================
  -->
  <macrodef name="make-module">
    <attribute name="module"/>
    <attribute name="include" default="**/*.class **/*.properties **/*.xml **/*.xsd"/>
    <attribute name="exclude" default="**/*-ant.xml **/*-dm.xml"/>
    <attribute name="destination"/>
    <sequential>
      <delete dir="${webinf.dir}/temp"/>
      <mkdir dir="${webinf.dir}/lib"/>
      <copy todir="${webinf.dir}/lib" flatten="true">
        <path refid="bka.igs.runtime"/>
      </copy>
      <echo message="Packaging Identity Governance Service application @{module} from path ${output.dir},${source.dir} and ${static.dir}"/>
      <war compress="false" destfile="${deploy.dir}/@{module}.war" manifest="${manifest}" needxmlfile="false">
        <fileset dir="${static.dir}"   excludes="WEB-INF/**"/>
        <classes dir="${output.dir}"   includes="@{include}"/>
        <classes dir="${source.dir}"   includes="META-INF/**"/>
        <webinf  dir="${webinf.dir}"/>
      </war>
      <delete dir="${webinf.dir}/lib"/>
      <for param="path" list="@{destination}">
        <sequential>
          <echo message="Copying java archive from path ${deploy.dir} to @{path}/lib"/>
          <copy todir="@{path}/lib" overwrite="true" preservelastmodified="false" verbose="no">
            <fileset dir="${deploy.dir}">
              <include  name="@{module}.war"/>
            </fileset>
          </copy>
        </sequential>
      </for>
      <!--doc-module type="module" module="@{module}" package="@{package}"/-->
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to copy deployment descriptors
  =====================================================================
  -->
  <macrodef name="descriptor-copy">
    <attribute name="source"/>
    <attribute name="target"/>
    <attribute name="pattern"/>
    <sequential>
      <copy todir="@{target}" overwrite="true" flatten="true" preservelastmodified="false" verbose="no" failonerror="false">
        <fileset dir="@{source}">
          <patternset refid="@{pattern}"/>
        </fileset>
      </copy>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT target to cleanup the build deliverables
  =====================================================================
  -->
  <target name="cleanup" description="Clean the project build deliverables">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${output.dir}"/>
      <fileset dir="${webinf.dir}/temp"/>
      <fileset dir="${deploy.doc}">
        <patternset refid="document.patterns"/>
      </fileset>
    </delete>
  </target>
  <!--
  =====================================================================
  == ANT target to cleanup the build deliverables
  =====================================================================
  -->
  <target name="clean" description="Clean the project build deliverables" depends="cleanup">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${deploy.dir}" includes="**/*"/>
    </delete>
  </target>
  <!--
  =====================================================================
  == ANT target to initialize the build process by creating all
  == necessary filesystem folders
  =====================================================================
  -->
  <target name="init">
    <tstamp/>
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${output.dir}/META-INF"/>
  </target>
  <!--
  =====================================================================
  == ANT target to copy secific files to the output directory
  =====================================================================
  -->
  <target name="copy" description="Copy files to output directory" depends="init">
    <patternset id="copy.patterns">
      <include name="META-INF/**/*"/>
    </patternset>
    <copy todir="${output.dir}" verbose="no">
      <fileset dir="${source.dir}">
        <patternset refid="filetype.patterns"/>
      </fileset>
    </copy>
  </target>
  <!--
  =====================================================================
  == ANT target to compile all Java Source files
  =====================================================================
  -->
  <target name="compile" description="Compile Java source files" depends="copy">
    <!--
    due to a regression of Bug 43114 - package-info.java repeatedly compiled
    we had to enforce to compile any existing package-info.java in the source
    tree
    -->
    <touch>
      <fileset dir="${source.dir}" includes="**/package-info.java"/>
    </touch>
    <javac executable       ="${jdk.compiler}"
           source           ="${jdk.version}"
           target           ="${jdk.version}"
           debug            ="${javac.debug}"
           nowarn           ="${javac.nowarn}"
           destdir          ="${output.dir}"
           encoding         ="${javac.encoding}"
           deprecation      ="${javac.deprecation}"
           classpathref     ="classpath"
           includeantruntime="no">
      <src path        ="${source.dir}"/>
    </javac>
  </target>
  <!--
  =====================================================================
  == ANT target to create a manifest used in the jar files
  =====================================================================
  -->
  <target name="manifest" description="Create a manifest used in the jar files">
    <delete file="${manifest}"/>
    <echo message="Reverting build version properties"/>
    <exec executable="${svn.executable}">
      <arg value="revert"/>
      <arg value="${application.version}"/>
    </exec>
    <!-- update to version properties -->
    <propertyfile file="${application.version}" comment="Build version info">
      <entry key="build.timest" type="date" value="now" pattern="dd/MM/yyyy hh:mm:ss aa"/>
      <entry key="build.major"  type="int"  value="00"  pattern="00" default="00"/>
      <entry key="build.minor"  type="int"  value="01"  pattern="00" default="00" operation="+" />
    </propertyfile>

    <!-- load the file -->
    <property file="${application.version}"/>

    <!-- create the manifest file -->
    <manifest file="${manifest}">
      <attribute name="Built-By"               value="${user.name}"/>
      <attribute name="Built-At"               value="${build.timest}"/>
      <attribute name="Specification-Title"    value="${description}"/>
      <attribute name="Specification-Version"  value="${application.release}"/>
      <attribute name="Specification-Vendor"   value="Oracle Consulting Services"/>
      <attribute name="Implementation-Title"   value="${description}"/>
      <attribute name="Implementation-Version" value="${application.release}-${build.major}.${build.minor}"/>
      <attribute name="Implementation-Vendor"  value="Oracle Consulting Services"/>
    </manifest>
  </target>
  <!--
  =====================================================================
  == ANT target to assemble the JEE customization library
  =====================================================================
  -->
  <target name="make-library" description="Build an JEE Java library archive" if="library" depends="compile,manifest">
    <make-library library="${library}" destination="${destination.base}"/>
  </target>
  <!--
  =====================================================================
  == ANT target to assemble the JEE web application archive
  =====================================================================
  -->
  <target name="make-module" description="Build an JEE web application archive" if="module" depends="compile,manifest">
    <make-module module="${module}" destination="${destination.base}"/>
  </target>
  <!--
  =====================================================================
  == ANT target to assemble the non-binary deliverables like source and
  == javadoc files
  =====================================================================
  -->
  <target name="make" description="Assemble the project source and documentation" depends="make-library,make-module">
    <!-- generate javadoc -->
    <javadoc author      ="false"
             classpathref="classpath"
             sourcepath  ="${source.dir}"
             packagenames="*"
             destdir     ="${deploy.doc}"
             encoding    ="${javac.encoding}"
             docencoding ="${javac.encoding}"
             charset     ="${javac.encoding}"/>
    <!-- assemble javadoc -->
    <jar destfile="${deploy.dir}/${application}-doc.jar">
      <fileset dir="${deploy.doc}">
        <patternset refid="document.patterns"/>
      </fileset>
    </jar>
    <!-- assemble source -->
    <jar destfile="${deploy.dir}/${application}-src.jar">
      <fileset dir="${source.dir}" includes="**/*.*"/>
    </jar>
  </target>
  <!--
  =====================================================================
  == ANT target to deploy a Web Application Module
  =====================================================================
  -->
  <target name="deploy" description="Deploy the Web Application Module" depends="make">
    <record name="${log.env}/deployment.log" loglevel="debug" action="start"/>
    <ssh-file file="${module}.war" dir="${deploy.dir}" location="${oim.remote.application}"/>
    <echo message="Deploy ${module}.war as a standalone application from location ${oim.remote.application} on ${jee.server.host}:${jee.server.port} managed server ${target}"/>
    <server:deploy action="deploy" remote="true" name="${module}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oim.remote.application}/${module}.war" targets="${oim.server.name}" stage="nostage" nostage="true"/>
    <record name="${log.env}/deployment.log" action="stop"/>
  </target>
  <!--
  =====================================================================
  == ANT target to redeploy a Web Application Module
  =====================================================================
  -->
  <target name="redeploy" description="Redeploy the Web Application Module" depends="make">
    <record name="${log.env}/deployment.log" loglevel="verbose" action="start"/>
    <echo message="Stop application ${module} at ${oim.remote.application} on ${jee.server.host}:${jee.server.port} managed server ${oim.server.name}"/>
    <server:deploy remote="true" action="stop" graceful="true" ignoreSessions="true" name="${module}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" failonerror="false"/>
    <ssh-file file="${module}.war" dir="${deploy.dir}" location="${oim.remote.application}"/>
    <echo message="Redeploy ${module}.war as a standalone application from location ${oim.remote.application} on ${jee.server.host}:${jee.server.port} managed server ${target}"/>
    <server:deploy remote="true" action="redeploy" name="${module}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oim.remote.application}/${module}.war" targets="${oim.server.name}"/>
    <record name="${log.env}/deployment.log" action="stop"/>
  </target>
  <!--
  =====================================================================
  == ANT target to undeploy a Web Application Module
  =====================================================================
  -->
  <target name="undeploy">
    <record name="${log.env}/deployment.log" loglevel="verbose" action="start"/>
    <echo message="Stop application ${module} at ${oim.remote.application} on ${jee.server.host}:${jee.server.port} managed server ${oim.server.name}"/>
    <server:deploy remote="true" action="stop" graceful="true" ignoreSessions="true" name="${module}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" failonerror="false"/>
    <echo message="Undeploy application ${module} at ${oim.remote.application} on ${jee.server.host}:${jee.server.port}"/>
    <server:deploy remote="true" action="undeploy" name="${module}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}"/>
    <record name="${log.env}/deployment.log" action="stop"/>
  </target>
  <!--
  =====================================================================
  == ANT target to build and the project artifacts from scratch
  =====================================================================
  -->
  <target name="all" description="Build,Deploy and Install the project on the target host" depends="clean,deploy"/>
</project>