/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2021 All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   Self Service Registration

    File        :   RegistrationVOImpl.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    RegistrationVOImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    1.0.0.0     2021-13-09  DSteding    First release version
*/

package bka.iam.identity.registration.model.view;

import oracle.iam.ui.platform.model.common.DataProvider;
import oracle.iam.ui.platform.model.common.ModelAdapterBean;
import oracle.iam.ui.platform.model.common.OIMProgrammaticVO;

import bka.iam.identity.registration.schema.DataProviderFactory;

////////////////////////////////////////////////////////////////////////////////
// class RegistrationVOImpl
// ~~~~~ ~~~~~~~~~~~~~~~~~~
/**
 ** The <code>View Object</code> to coordinate database queries and the view
 ** rows that result from executing queries belonging to Self Registration
 ** Requests.
 ** <p>
 ** A <code>View Object</code> manages a view row set (ViewRowSetImpl). When the
 ** application calls a RowSet method on a <code>View Object</code>, the call is
 ** delegated to the its view row set, which performs the actual operation.
 ** <p>
 ** A <code>View Object</code>'s base definition is provided by a View
 ** Definition object, which is built from the meta-data stored in an XML file.
 ** <br>
 ** The <code>View Object</code> inherits many of its definitions from its View
 ** Definition, but applications can override them in instances.
 ** <p>
 ** A <code>View Object</code> persists until it, or the
 ** <code>Application Module</code> from which it was created, is explicitly
 ** deleted (using remove methods). You can use a given <code>View Object</code>
 ** definition more than once within an <code>Application Module</code>; the
 ** Business Component framework uses View instance names to distinguish between
 ** them.
 ** ---------------------------------------------------------------------
 ** ---    File generated by Oracle ADF Business Components Design Time.
 ** ---    Mon Sep 13 08:37:29 CEST 2021
 ** ---    Custom code may be added to this class.
 ** ---    Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 1.0.0.0
 ** @since   1.0.0.0
 */
public class RegistrationVOImpl extends OIMProgrammaticVO {

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>RegistrationVOImpl</code> view object that allows use
   ** as a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public RegistrationVOImpl() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methods of abstract base classes
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   getDataProvider (OIMProgrammaticVO)
  /**
   ** Factory method to create an instance of a proper {@link DataProvider}.
   **
   ** @return                    an instance of {@link DataProvider}.
   */
  @Override
  public DataProvider<? extends ModelAdapterBean> getDataProvider() {
    return DataProviderFactory.createRegistrationDataProvider();
  }
}