<?xml version="1.0" encoding="US-ASCII"?>
<project name        ="Access Manager Workspace Targets"
         basedir     ="."
         xmlns:fmw   ="http://oracle.hst.deployment/fusion"
         xmlns:jps   ="http://oracle.hst.deployment/security"
         xmlns:wsm   ="http://oracle.hst.deployment/webservice"
         xmlns:server="http://oracle.hst.deployment/topology">
  <!--
  =====================================================================
  == properties globaly defined
  =====================================================================
  -->
  <import file="oam-context.xml"/>
  <!--
  =====================================================================
  == ANT target to execute a remote command
  =====================================================================
  -->
  <macrodef name="ssh-shell">
    <attribute name="command"/>
    <sequential>
      <sshexec command="@{command}" keyfile="${scp.server.certificate}" host="${scp.server.host}" username="${scp.server.username}" password="${scp.server.password}" passphrase="${scp.server.passphrase}" trust="${scp.server.trust}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT target to copy runtime artifacts
  =====================================================================
  -->
  <macrodef name="ssh-file">
    <attribute name="file"/>
    <attribute name="dir"/>
    <attribute name="location"/>
    <sequential>
      <echo message="Transfering @{file} from @{dir} to @{location} on ${scp.server.host}"/>
      <scp todir="${scp.server.destination}:@{location}" port="${scp.server.port}" keyfile="${scp.server.certificate}" trust="${scp.server.trust}">
        <fileset dir="@{dir}">
          <include name="@{file}"/>
        </fileset>
      </scp>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to create the java doc and package the source tree
  =====================================================================
  -->
  <macrodef name="doc-module">
    <attribute name="type"/>
    <attribute name="module"/>
    <attribute name="package"/>
    <sequential>
      <!-- generate javadoc -->
      <echo message="Generating Access Manager documentation for @{type} @{module} from path ${deploy.doc}"/>
      <javadoc author      ="false"
               classpathref="classpath"
               sourcepath  ="${source.dir}"
               packagenames="@{package}"
               destdir     ="${deploy.doc}"
               encoding    ="${javac.encoding}"
               docencoding ="${javac.encoding}"
               charset     ="${javac.encoding}"/>
      <!-- package javadoc -->
      <echo message="Packaging Access Manager documentation for @{type} @{module} from path ${deploy.doc}"/>
      <jar destfile="${deploy.dir}/@{module}-doc.jar">
        <fileset dir="${deploy.doc}">
          <patternset refid="document.patterns"/>
        </fileset>
      </jar>
      <!-- package source -->
      <echo message="Packaging Access Manager source for @{type} @{module} from path ${source.dir}"/>
      <jar destfile="${deploy.dir}/@{module}-src.jar">
        <fileset dir="${source.dir}" includes="**/*.*"/>
      </jar>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to make a OAM jar module
  =====================================================================
  -->
  <macrodef name="oam-jar-make">
    <attribute name="directory"/>
    <attribute name="module"/>
    <attribute name="package"/>
    <attribute name="destination"/>
    <sequential>
      <echo message="Packaging Access Manager module @{module} from path ${output.dir} and ${static.dir}"/>
      <jar compress="false" destfile="${deploy.dir}/@{module}.jar" manifest="${manifest}">
        <zipfileset dir="${output.dir}" excludes="**/*-ant.xml ant/** .data/** .wlLibs/** .wlsjsps/**"/>
      </jar>
      <echo message="Copying java archive from path ${deploy.dir} to @{destination}"/>
      <for param="task" list="@{destination}">
        <sequential>
          <copy todir="@{task}/lib" overwrite="true" preservelastmodified="false" verbose="no">
            <fileset dir="${deploy.dir}">
              <include  name="@{module}.jar"/>
            </fileset>
          </copy>
        </sequential>
      </for>
      <doc-module type="library" module="@{module}" package="@{package}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to make a OAM war module
  =====================================================================
  -->
  <macrodef name="oam-war-make">
    <attribute name="directory"/>
    <attribute name="module"/>
    <attribute name="package"/>
    <attribute name="destination"/>
    <sequential>
      <delete dir="${webinf.dir}/temp"/>
      <echo message="Packaging Access Manager module @{module} from path ${output.dir} and ${static.dir}"/>
      <war compress="false" destfile="${deploy.dir}/@{module}.war" manifest="${manifest}" needxmlfile="false">
        <zipfileset dir="${output.dir}" excludes="**/*.properties **/*-ant.xml ant/** .data/** .wlLibs/** .wlsjsps/**"/>
        <zipfileset dir="${static.dir}"/>
        <zipfileset dir="${output.dir}" includes="**/*.properties" prefix="WEB-INF/classes"/>
      </war>
      <copy todir="@{destination}/lib" overwrite="true" preservelastmodified="false" verbose="no">
        <fileset dir="${deploy.dir}">
          <include  name="@{module}.jar"/>
        </fileset>
      </copy>
      <doc-module type="library" module="@{module}" package="@{package}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to deploy a Shared Library Application
  =====================================================================
  -->
  <macrodef name="oam-lib-deploy">
    <attribute name="application"/>
    <attribute name="directory"/>
    <attribute name="member"/>
    <sequential>
      <ssh-file file="@{application}.war" dir="@{directory}" location="${oam.remote.application}"/>
      <echo message="Deploy @{application}.war as a shared library from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="deploy" remote="true" library="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oam.remote.application}/@{application}.war" targets="@{member}" stage="nostage" nostage="true"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to undeploy a Shared Library Application
  =====================================================================
  -->
  <macrodef name="oam-lib-undeploy">
    <attribute name="application"/>
    <sequential>
      <echo message="Undeploy @{application}.war as a shared library from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="stop"     remote="true" library="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" ignoresessions="true" failonerror="false"/>
      <server:deploy action="undeploy" remote="true" library="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to deploy a Web Application Module
  =====================================================================
  -->
  <macrodef name="oam-war-deploy">
    <attribute name="application"/>
    <attribute name="directory"/>
    <attribute name="member"/>
    <sequential>
      <ssh-file file="@{application}.war" dir="@{directory}" location="${oam.remote.application}"/>
      <echo message="Deploy @{application}.war as a web application from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="deploy" remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oam.remote.application}/@{application}.war" targets="@{member}" stage="nostage" nostage="true"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to redeploy a Web Application Module
  =====================================================================
  -->
  <macrodef name="oam-war-redeploy">
    <attribute name="application"/>
    <attribute name="directory"/>
    <attribute name="member"/>
    <sequential>
      <echo message="Redeploy @{application}.war as an application from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="stop"     remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" ignoresessions="true" failonerror="false"/>
      <ssh-file file="@{application}.war" dir="@{directory}" location="${oam.remote.application}"/>
      <server:deploy action="redeploy" remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oam.remote.application}/@{application}.war" targets="@{member}"/>
      <server:deploy action="start"    remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to undeploy a Web Application Module
  =====================================================================
  -->
  <macrodef name="oam-war-undeploy">
    <attribute name="application"/>
    <sequential>
      <echo message="Undeploy @{application}.war as an application from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="stop"     remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" ignoresessions="true" failonerror="false"/>
      <server:deploy action="undeploy" remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to deploy an Enterprise Application Module
  =====================================================================
  -->
  <macrodef name="oam-ear-deploy">
    <attribute name="application"/>
    <attribute name="directory"/>
    <attribute name="member"/>
    <sequential>
      <ssh-file file="@{application}.ear" dir="@{directory}" location="${oam.remote.application}"/>
      <echo message="Deploy @{application}.ear as an enterprise application from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="deploy" remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oam.remote.application}/@{application}.ear" targets="@{member}" stage="nostage" nostage="true"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to redeploy an Enterprise Application Module
  =====================================================================
  -->
  <macrodef name="oam-ear-redeploy">
    <attribute name="application"/>
    <attribute name="directory"/>
    <attribute name="member"/>
    <sequential>
      <echo message="Redeploy @{application}.ear as an application from ${oam.remote.application} on ${jee.server.host}:${jee.server.port}"/>
      <server:deploy action="stop"     remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" ignoresessions="true" failonerror="false"/>
      <ssh-file file="@{application}.ear" dir="@{directory}" location="${oam.remote.application}"/>
      <server:deploy action="redeploy" remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" source="${oam.remote.application}/@{application}.war" targets="@{member}"/>
      <server:deploy action="start"    remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to undeploy an Enterprise Application Module
  =====================================================================
  -->
  <macrodef name="oam-ear-undeploy">
    <attribute name="application"/>
    <sequential>
      <echo message="Undeploy @{application}.ear as an application from ${oam.remote.application} on ${oam.server.host}:${oam.server.port}"/>
      <server:deploy action="stop"     remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}" ignoresessions="true" failonerror="false"/>
      <server:deploy action="undeploy" remote="true" name="@{application}" appversion="${implementation.version}" adminurl="${jee.server.protocol}://${jee.server.host}:${jee.server.port}" user="${jee.server.username}" password="${jee.server.password}"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT target to cleanup the build deliverables
  =====================================================================
  -->
  <target name="cleanup" description="Clean the project build deliverables">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${output.dir}"/>
      <fileset dir="${webinf.dir}/temp"/>
      <fileset dir="${deploy.doc}">
        <patternset refid="document.patterns"/>
      </fileset>
    </delete>
  </target>
  <!--
  =====================================================================
  == ANT target to cleanup the build deliverables
  =====================================================================
  -->
  <target name="clean" description="Clean the project build deliverables" depends="cleanup">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${deploy.dir}" includes="**/*"/>
    </delete>
  </target>
  <!--
  =====================================================================
  == ANT target to initialize the build process by creating all
  == necessary filesystem folders
  =====================================================================
  -->
  <target name="init">
    <tstamp/>
    <mkdir dir="${output.dir}"/>
    <mkdir dir="${output.dir}/META-INF"/>
    <mkdir dir="${deploy.dir}"/>
  </target>
  <!--
  =====================================================================
  == ANT target to copy secific files to the output directory
  =====================================================================
  -->
  <target name="copy" description="Copy files to output directory" depends="init">
    <copy todir="${output.dir}" includeEmptyDirs="false" failonerror="false">
      <fileset dir="${source.dir}">
        <patternset refid="filetype.patterns"/>
      </fileset>
      <fileset dir="${resource.dir}">
        <patternset refid="filetype.patterns"/>
      </fileset>
    </copy>
    <copy todir="${output.dir}/META-INF">
      <fileset dir="${source.dir}/META-INF"/>
    </copy>
  </target>
  <!--
  =====================================================================
  == ANT target to compile all Java Source files
  =====================================================================
  -->
  <target name="compile" description="Compile Java source files" depends="copy">
    <javac executable       ="${jdk.compiler}"
           source           ="${jdk.version}"
           target           ="${jdk.version}"
           debug            ="${javac.debug}"
           nowarn           ="${javac.nowarn}"
           destdir          ="${output.dir}"
           encoding         ="${javac.encoding}"
           deprecation      ="${javac.deprecation}"
           classpathref     ="classpath"
           includeantruntime="no">
      <src path        ="${source.dir}"/>
    </javac>
  </target>
  <!--
  =====================================================================
  == ANT target to create a manifest used in the jar files
  =====================================================================
  -->
  <target name="manifest" description="Create a manifest used in the jar files">
    <delete file="${manifest}"/>
    <echo message="Reverting build version properties"/>
    <exec executable="${svn.executable}">
      <arg value="revert"/>
      <arg value="${application.version}"/>
    </exec>
    <!-- update to version properties -->
    <propertyfile file="${application.version}" comment="Build version info">
      <entry key="build.timest" type="date" value="now" pattern="dd/MM/yyyy hh:mm:ss aa"/>
      <entry key="build.major"  type="int"  value="00"  pattern="00" default="00"/>
      <entry key="build.minor"  type="int"  value="01"  pattern="00" default="00" operation="+" />
    </propertyfile>
    <!-- load the file -->
    <property file="${application.version}"/>
    <!-- create the manifest file -->
    <manifest file="${manifest}">
      <attribute name="Built-By"               value="${user.name}"/>
      <attribute name="Built-At"               value="${build.timest}"/>
      <attribute name="Specification-Title"    value="${description}"/>
      <attribute name="Specification-Version"  value="${specification.version}"/>
      <attribute name="Specification-Vendor"   value="Oracle Consulting Services"/>
      <attribute name="Implementation-Title"   value="${description}"/>
      <attribute name="Implementation-Version" value="${implementation.version}-${build.major}.${build.minor}"/>
      <attribute name="Implementation-Vendor"  value="Oracle Consulting Services"/>
    </manifest>
  </target>
</project>