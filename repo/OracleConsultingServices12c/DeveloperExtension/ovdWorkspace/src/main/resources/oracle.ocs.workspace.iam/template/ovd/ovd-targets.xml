<?xml version="1.0" encoding="US-ASCII"?>
<project name="#{ant.project}" basedir=".">
  <!--
  =====================================================================
  == properties globaly defined
  =====================================================================
  -->
  <import file="#{ovd.preferences}"/>
  <!--
  =====================================================================
  == properties specific to the OVD build targets
  =====================================================================
  -->
  <property name="wks.package" value="#{wks.package}"/>
  <!--
  =====================================================================
  == ANT target to cleanup the build deliverables
  =====================================================================
  -->
  <target name="clean" description="Clean the project build deliverables">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${output.dir}" includes="**/*"/>
      <fileset dir="${deploy.dir}" includes="**/*"/>
      <fileset dir="${deploy.doc}">
        <patternset refid="document.patterns"/>
      </fileset>
    </delete>
  </target>
  <!--
  =====================================================================
  == ANT target to initialize the build process by creating all
  == necessary filesystem folders
  =====================================================================
  -->
  <target name="init">
    <tstamp/>
    <mkdir dir="${output.dir}"/>
    <mkdir dir="${output.dir}/META-INF"/>
    <mkdir dir="${deploy.dir}"/>
  </target>
  <!--
  =====================================================================
  == ANT target to copy secific files to the output directory
  =====================================================================
  -->
  <target name="copy" description="Copy files to output directory" depends="init">
    <patternset id="copy.patterns">
      <include name="**/*.xml"/>
      <include name="**/*.xsd"/>
      <include name="**/*.wsdl"/>
    </patternset>
    <copy todir="${output.dir}">
      <fileset dir="${source.dir}">
        <patternset refid="copy.patterns"/>
      </fileset>
    </copy>
  </target>
  <!--
  =====================================================================
  == ANT target to compile all Java Source files
  =====================================================================
  -->
  <target name="compile" description="Compile Java source files" depends="copy">
    <javac executable       ="${jdk.compiler}"
           source           ="${jdk.version}"
           target           ="${jdk.version}"
           destdir          ="${output.dir}"
           classpathref     ="classpath"
           debug            ="${javac.debug}"
           nowarn           ="${javac.nowarn}"
           deprecation      ="${javac.deprecation}"
           encoding         ="${javac.encoding}"
           includeantruntime="no">
      <src path        ="${source.dir}"/>
    </javac>
  </target>
  <!--
  =====================================================================
  == ANT target to create a manifest used in the jar files
  =====================================================================
  -->
  <target name="manifest" description="Create a manifest used in the jar files">
    <delete file="${manifest}"/>
    <!-- update to version properties -->
    <propertyfile file="${application.version}" comment="Build version info">
      <entry key="touch.time"  type="date" value="now" pattern="dd/MM/yyyy hh:mm:ss aa"/>
      <entry key="touch.build" type="int"  value="1" default="0" operation="+" pattern="0000"/>
    </propertyfile>

    <!-- load the file -->
    <property file="${application.version}"/>

    <!-- create the manifest file -->
    <manifest file="${manifest}">
      <attribute name="Built-By"               value="${user.name}"/>
      <attribute name="Built-At"               value="${build.timest}"/>
      <attribute name="Specification-Title"    value="${description}"/>
      <attribute name="Specification-Version"  value="${application.release}"/>
      <attribute name="Specification-Vendor"   value="Oracle Consulting Services"/>
      <attribute name="Implementation-Title"   value="${description}"/>
      <attribute name="Implementation-Version" value="${application.release}-${build.major}.${build.minor}"/>
      <attribute name="Implementation-Vendor"  value="Oracle Consulting Services"/>
    </manifest>
  </target>
  <!--
  =====================================================================
  == ANT target to package the library
  =====================================================================
  -->
  <target name="package-library" description="Build the library" if="library" depends="compile,manifest">
    <echo message="Packaging java archive from path ${output.dir}"/>
    <jar destfile="${deploy.dir}/${library}.jar" manifest="${manifest}">
      <fileset dir="${output.dir}" excludes= "**/*.xsd **/*-dm.xml **/*.cdi **/Trouble*.*"/>
    </jar>
  </target>
  <!--
  =====================================================================
  == ANT target to package the non-binary deliverables like source and
  == javadoc files
  =====================================================================
  -->
  <target name="package" description="Package the project source and documentation" depends="package-library">
    <!-- generate javadoc -->
    <javadoc author       ="false"
             classpathref ="classpath"
             sourcepath   ="${source.dir}"
             packagenames ="#{wks.package}.*"
             destdir     ="${deploy.doc}"
             encoding    ="${javac.encoding}"
             docencoding ="${javac.encoding}"
             charset     ="${javac.encoding}"/>
    <!-- package javadoc -->
    <jar destfile="${deploy.dir}/${application}-doc.jar">
      <fileset dir="${deploy.doc}">
        <patternset refid="document.patterns"/>
      </fileset>
    </jar>

    <!-- package source -->
    <jar destfile="${deploy.dir}/${application}-src.jar">
      <fileset dir="${source.dir}" includes="**/*.*"/>
    </jar>
  </target>
  <!--
  =====================================================================
  == ANT target to deploy the adapter archive
  =====================================================================
  -->
  <target name="deploy-library" description="Deploy the library" if="library" depends="package">
    <copy todir="${destination.base}/lib" overwrite="true" preservelastmodified="false" verbose="no">
      <fileset dir="${deploy.dir}">
        <include  name="${library}.jar"/>
      </fileset>
    </copy>
  </target>
  <!--
  =====================================================================
  == ANT target to deploy the project artifacts
  =====================================================================
  -->
  <target name="deploy" description="Deploy the project artifacts" depends="package,deploy-library"/>
  <!--
  =====================================================================
  == ANT target to build and the project artifacts from scratch
  =====================================================================
  -->
  <target name="all" description="Build,Deploy and Install the project on the target host" depends="clean, deploy"/>
</project>