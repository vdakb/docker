<?xml version="1.0" encoding="US-ASCII"?>
<project name   ="Access Manager Docbook Workspace Targets"
         basedir="..">
  <!--
  ==============================================================================
  == properties globaly defined
  ==============================================================================
  -->
  <import file="./dbk-context.xml"/>
  <!--
  =====================================================================
  == ANT macro to configure and execute the HTML Processor
  =====================================================================
  -->
  <macrodef name="docbook.htm-chunk">
    <attribute name="source"/>
    <attribute name="target"/>
    <attribute name="file"/>
    <attribute name="style" default="oracle/2.0"/>
    <sequential>
      <!--
      copy the template to the working directory by applying the filter to set
      the correct file path
      -->
      <copy file="${docbook.styles}/html-chunk.xsl" tofile="${docbook.temp}/docbook-htm.xsl" overwrite="true" verbose="no">
        <filterset>
          <filter token="docbook.base"  value="${ocs.base.dbk}"/>
          <filter token="docbook.style" value="@{style}"/>
        </filterset>
      </copy>
        <!-- XSLT 2.0
        <factory name="net.sf.saxon.TransformerFactoryImpl">
        -->
      <xslt in       ="@{source}/@{file}.xml"
            out      ="@{target}/@{file}.html"
            style    ="${docbook.temp}/docbook-htm.xsl"
            force    ="true"
            processor="trax">
        <factory name="com.icl.saxon.TransformerFactoryImpl">
          <!--
          Indicates whether source documents should have any XInclude directives
          expanded.

          The default is false.

          The option applies to all input XML documents, including stylesheets and
          schema documents. It can be overridden for individual documents using
          the ParseOptions class.

          This option relies on support in the underlying XML parser. If the XML
          parser does not support XInclude processing, the option is ignored.
          <attribute name="http://saxon.sf.net/feature/xinclude-aware" value="true"/>
          -->
        </factory>
      </xslt>
    </sequential>
  </macrodef>
  <macrodef name="docbook.htm-mono">
    <attribute name="source"/>
    <attribute name="target"/>
    <attribute name="file"/>
    <attribute name="style" default="oracle/2.0"/>
    <sequential>
      <!--
      copy the template to the working directory by applying the filter to set
      the correct file path
      -->
      <copy file="${docbook.styles}/html-mono.xsl" tofile="${docbook.temp}/docbook-htm.xsl" overwrite="true" verbose="no">
        <filterset>
          <filter token="docbook.base"  value="${ocs.base.dbk}"/>
          <filter token="docbook.style" value="@{style}"/>
        </filterset>
      </copy>
        <!-- XSLT 2.0
        <factory name="net.sf.saxon.TransformerFactoryImpl">
        -->
      <xslt in       ="@{source}/@{file}.xml"
            out      ="@{target}/@{file}.html"
            style    ="${docbook.temp}/docbook-htm.xsl"
            force    ="true"
            processor="trax">
        <factory name="com.icl.saxon.TransformerFactoryImpl">
          <!--
          Indicates whether source documents should have any XInclude directives
          expanded.

          The default is false.

          The option applies to all input XML documents, including stylesheets and
          schema documents. It can be overridden for individual documents using
          the ParseOptions class.

          This option relies on support in the underlying XML parser. If the XML
          parser does not support XInclude processing, the option is ignored.
          <attribute name="http://saxon.sf.net/feature/xinclude-aware" value="true"/>
          -->
        </factory>
      </xslt>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to configure and execute the Format Object Processor (FOP)
  =====================================================================
  -->
  <macrodef name="docbook.fop">
    <attribute name="source"/>
    <attribute name="file"/>
    <attribute name="style" default="oracle/2.0"/>
    <sequential>
      <!--
      copy the template to the working directory by applying the filter to set
      the correct file path
      -->
      <copy file="${docbook.styles}/fop.xsl" tofile="${docbook.temp}/docbook-fop.xsl" overwrite="true" verbose="no">
        <filterset>
          <filter token="docbook.base"  value="${ocs.base.dbk}"/>
          <filter token="docbook.style" value="@{style}"/>
        </filterset>
      </copy>
      <xslt in       ="@{source}/@{file}.xml"
            out      ="${docbook.temp}/docbook-fop.tmp"
            style    ="${docbook.temp}/docbook-fop.xsl"
            processor="trax">
        <factory name="net.sf.saxon.TransformerFactoryImpl">
          <!--
          This is set to true to cause basic timing and tracing information to be
          output to the standard error output stream.

          The name of the feature is poorly chosen, since much of the information
          that is output has nothing to do with timing, for example the names of
          output files for xsl:result-document are traced, as are the names of
          schema documents loaded.
          <attribute name="http://saxon.sf.net/feature/timing"         value="true"/>
          -->
          <!--
          Indicates whether source documents should have any XInclude directives
          expanded.

          The default is false.

          The option applies to all input XML documents, including stylesheets and
          schema documents. It can be overridden for individual documents using
          the ParseOptions class.

          This option relies on support in the underlying XML parser. If the XML
          parser does not support XInclude processing, the option is ignored.
          -->
          <attribute name="http://saxon.sf.net/feature/xinclude-aware" value="true"/>
        </factory>
      </xslt>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == ANT macro to assemble a PDF document
  =====================================================================
  -->
  <macrodef name="docbook.pdf">
    <attribute name="target"/>
    <attribute name="output"/>
    <sequential>
      <fop  format      ="application/pdf"
            fofile      ="${docbook.temp}/docbook-fop.tmp"
            outfile     ="@{target}/@{output}.pdf"
            messagelevel="error"
            force       ="true"
            userconfig  ="${ocs.base.fop}/conf/fop.xconf"/>
    </sequential>
  </macrodef>
  <!--
  =====================================================================
  == Generates html/titlepage.templates.xsl from
  == html/titlepage.templates.xml
  =====================================================================
  -->
  <!--
  <target name="titlepage-template-html" depends="init">
    <echo message="Generating src/docs/xsl/html/titlepage.templates.xsl - please wait..."/>
    <style basedir="${tools.dir}" style="${tools.dir}/docbook-stylesheets/template/titlepage.xsl" in="${style.dir}/html/titlepage.templates.xml" out="${style.dir}/html/titlepage.templates.xsl"/>
  </target>
  -->
  <!--
  =====================================================================
  == Generates fop/titlepage.templates.xsl from
  == fop/titlepage.templates.xml
  =====================================================================
  -->
  <!--
  <target name="titlepage-template-fop" depends="init">
    <echo message="Generating src/docs/xsl/fo/titlepage.templates.xsl - please wait..."/>
    <style basedir="${tools.dir}" style="${tools.dir}/docbook-stylesheets/template/titlepage.xsl" in="${style.dir}/fo/titlepage.templates.xml" out="${style.dir}/fo/titlepage.templates.xsl"/>
  </target>
  -->
  <!--
  =====================================================================
  -->
  <target name="copy-imgage-files">
    <condition property="is-fo">
      <equals arg1="${todir}" arg2="${fo.dir}/images"/>
    </condition>
    <condition property="is-html">
      <equals arg1="${todir}" arg2="${html.dir}/images"/>
    </condition>
    <copy flatten="yes" preservelastmodified="yes" overwrite="yes" includeEmptyDirs="no" todir="${todir}">
      <fileset dir="${docs.dir}" includes="${includes}">
        <!-- Limit copying of unused images: -->
        <exclude name="**/*.txt"/>
        <exclude name="**/ChangeLog"/>
        <exclude name="docbook/images/callouts/*" if="is-fo"/>
        <exclude name="img/oracle-consulting-red.png" if="is-fo"/>
        <exclude name="img/oracle-badge-master.png"   if="is-fo"/>
        <exclude name="img/toc-*.png"  unless="is-html"/>
        <exclude name="img/top-*.png"  unless="is-html"/>
        <exclude name="img/prev-*.png" unless="is-html"/>
        <exclude name="img/next-*.png" unless="is-html"/>
      </fileset>
    </copy>


      <copy file="${docbook.styles}/fop.xsl" tofile="${docbook.temp}/docbook-fop.xsl" overwrite="true" verbose="no">
        <filterset>
          <filter token="docbook.base"  value="${ocs.base.dbk}"/>
          <filter token="docbook.style" value="@{style}"/>
        </filterset>
      </copy>
  </target>
</project>
