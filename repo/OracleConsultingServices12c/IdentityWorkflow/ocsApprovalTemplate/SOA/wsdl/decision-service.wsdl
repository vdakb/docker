<?xml version="1.0" encoding="US-ASCII"?>
<wsdl:definitions name           ="DecisionService"
                  xmlns:xsd      ="http://www.w3.org/2001/XMLSchema"
                  xmlns:wsdl     ="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:plnk     ="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                  xmlns:java     ="http://schemas.xmlsoap.org/wsdl/java/"
                  xmlns:soap     ="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:format   ="http://schemas.xmlsoap.org/wsdl/formatbinding/"
                  xmlns:rules    ="http://xmlns.oracle.com/bpel/rules"
                  xmlns:soap12   ="http://schemas.xmlsoap.org/wsdl/soap12/"
                  xmlns:tns      ="http://xmlns.oracle.com/approval-rule/approval-decision"
                  targetNamespace="http://xmlns.oracle.com/approval-rule/approval-decision">
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   |   PARTNER LINK TYPE DEFINITION
   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   |   The DecisionServiceEndpoint partnerLinkType binds the provider and
   |   requester portType into an asynchronous conversation.
   +~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <plnk:partnerLinkType name="DecisionServiceEndpoint">
    <plnk:role name="IDecisionService_Role">
      <plnk:portType name="tns:IDecisionService"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   |   TYPE DEFINITION
   |   ~~~~~~~~~~~~~~~
   |   List of services participating in this BPEL process
   |
   |   The default output of the BPEL designer uses strings as input and output
   |   to the BPEL Process. But you can define or import any XML Schema type
   |   and use them as part of the message types.
   +~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <wsdl:types>
    <schema xmlns               ="http://www.w3.org/2001/XMLSchema"
            xmlns:bpelpm        ="http://xmlns.oracle.com/bpel"
            xmlns:rules         ="http://xmlns.oracle.com/bpel/rules"
            xmlns:tns           ="http://xmlns.oracle.com/approval-rule/approval-decision"
            targetNamespace     ="http://xmlns.oracle.com/approval-rule/approval-decision"
            elementFormDefault  ="qualified"
            attributeFormDefault="unqualified">
      <include schemaLocation="../schema/decision-service.xsd"/>
    </schema>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://xmlns.oracle.com/bpel/rules" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:tns="http://xmlns.oracle.com/bpel/rules" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpelpm="http://xmlns.oracle.com/bpel" xmlns:rules="http://xmlns.oracle.com/bpel/rules">
      <element name="int"      type="xsd:int"/>
      <element name="byte"     type="xsd:byte"/>
      <element name="short"    type="xsd:short"/>
      <element name="long"     type="xsd:long"/>
      <element name="float"    type="xsd:float"/>
      <element name="double"   type="xsd:double"/>
      <element name="string"   type="xsd:string"/>
      <element name="boolean"  type="xsd:boolean"/>
      <element name="integer"  type="xsd:integer"/>
      <element name="decimal"  type="xsd:decimal"/>
      <element name="dateTime" type="xsd:dateTime"/>
      <element name="duration" type="xsd:duration"/>
    </schema>
    <schema xmlns               ="http://www.w3.org/2001/XMLSchema"
            xmlns:bpelpm        ="http://xmlns.oracle.com/bpel"
            xmlns:rules         ="http://xmlns.oracle.com/bpel/rules"
            xmlns:ns2           ="http://oracle.businessrule"
            xmlns:req           ="http://xmlns.oracle.com/RequestServiceApp/RequestDataService/RequestCatalogDetails"
            xmlns:tns           ="http://xmlns.oracle.com/approval-rule/approval-decision"
            targetNamespace     ="http://xmlns.oracle.com/approval-rule/approval-decision"
            elementFormDefault  ="qualified"
            attributeFormDefault="unqualified">
      <import schemaLocation="../schema/business-rule.xsd"   namespace="http://oracle.businessrule"/>
      <import schemaLocation="../schema/request-catalog.xsd" namespace="http://xmlns.oracle.com/RequestServiceApp/RequestDataService/RequestCatalogDetails"/>
      <element name="callFunctionStateless">
        <complexType>
          <sequence>
            <element name="configURL"    type="string"              minOccurs="0" maxOccurs="1"/>
            <element name="bpelInstance" type="bpelpm:tBpelProcess" minOccurs="0" maxOccurs="1"/>
            <element name="parameterList"                           minOccurs="1" maxOccurs="1">
              <complexType>
                <sequence>
                  <element ref="req:RequestCatalogDetails"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
          <attribute name="name" type="NCName" use="required"/>
        </complexType>
      </element>
      <element name="callFunctionStatelessDecision">
        <complexType>
          <sequence>
            <element name="resultList" minOccurs="1" maxOccurs="1">
              <complexType>
                <sequence>
                  <element ref="ns2:StageOutput"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="callFunctionStateful">
        <complexType>
          <sequence>
            <element name="configURL"    type="string"              minOccurs="0" maxOccurs="1"/>
            <element name="bpelInstance" type="bpelpm:tBpelProcess" minOccurs="0" maxOccurs="1"/>
            <element name="parameterList"                           minOccurs="1" maxOccurs="1">
              <complexType>
                <sequence>
                  <element ref="req:RequestCatalogDetails"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
          <attribute name="name" type="NCName" use="required"/>
        </complexType>
      </element>
      <element name="callFunctionStatefulDecision">
        <complexType>
          <sequence>
            <element name="resultList" minOccurs="1" maxOccurs="1">
              <complexType>
                <sequence>
                  <element ref="ns2:StageOutput"/>
                </sequence>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>
    </schema>
  </wsdl:types>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   |   MESSAGE TYPE DEFINITION
   |   ~~~~~~~~~~~~~~~~~~~~~~~
   |   Definition of the message types used as part of the port type defintions
   +~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <wsdl:message name="callFunctionStatelessMessage">
    <wsdl:part name="payload" element="tns:callFunctionStateless"/>
  </wsdl:message>
  <wsdl:message name="callFunctionStatelessDecisionMessage">
    <wsdl:part name="payload" element="tns:callFunctionStatelessDecision"/>
  </wsdl:message>
  <wsdl:message name="decisionServiceError">
    <wsdl:part name="payload" element="tns:errorInfo"/>
  </wsdl:message>
  <wsdl:message name="callFunctionStatefulMessage">
    <wsdl:part name="payload" element="tns:callFunctionStateful"/>
  </wsdl:message>
  <wsdl:message name="callFunctionStatefulDecisionMessage">
    <wsdl:part name="payload" element="tns:callFunctionStatefulDecision"/>
  </wsdl:message>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   |   PORT TYPE DEFINITION
   |   ~~~~~~~~~~~~~~~~~~~~
   |   A port type groups a set of operations into a logical service unit.
   +~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <wsdl:portType name="IDecisionService">
    <wsdl:operation name="callFunctionStateless">
      <wsdl:input name="callFunctionStatelessInput"   message="tns:callFunctionStatelessMessage"/>
      <wsdl:output name="callFunctionStatelessOutput" message="tns:callFunctionStatelessDecisionMessage"/>
      <wsdl:fault name="operationErroredFault"        message="tns:decisionServiceError"/>
    </wsdl:operation>
    <wsdl:operation name="callFunctionStateful">
      <wsdl:input name="callFunctionStatefulInput"   message="tns:callFunctionStatefulMessage"/>
      <wsdl:output name="callFunctionStatefulOutput" message="tns:callFunctionStatefulDecisionMessage"/>
      <wsdl:fault name="operationErroredFault"       message="tns:decisionServiceError"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>