<?xml version="1.0" encoding="US-ASCII"?>
<schema xmlns               ="http://www.w3.org/2001/XMLSchema"
        xmlns:bpelpm        ="http://xmlns.oracle.com/bpel"
        xmlns:tns           ="http://xmlns.oracle.com/approval-rule/approval-decision"
        targetNamespace     ="http://xmlns.oracle.com/approval-rule/approval-decision"
        blockDefault        ="#all"
        attributeFormDefault="unqualified"
        elementFormDefault  ="qualified">

  <import namespace="http://xmlns.oracle.com/bpel" schemaLocation="oramds:/soa/shared/rules/BpelProcess.xsd"/>

  <element name="errorInfo" type="tns:tDecisionServiceError">
    <annotation>
      <documentation>
        BPEL Decision Service fault element
      </documentation>
    </annotation>
  </element>

  <attributeGroup name="name-desc">
    <annotation>
      <documentation>
        Attribute group for elements requiring (name, description) attributes
      </documentation>
    </annotation>
    <attribute name="name"        type="NCName" use="required"/>
    <attribute name="displayName" type="string" use="optional"/>
    <attribute name="description" type="string" use="optional"/>
  </attributeGroup>

  <complexType name="tProperty">
    <annotation>
      <documentation>
        Property Type
      </documentation>
    </annotation>
    <simpleContent>
      <extension base="string">
        <attribute name="name" type="NCName" use="required"/>
      </extension>
    </simpleContent>
  </complexType>
  <complexType name="tPropertyList">
    <annotation>
      <documentation>
        PropertyList
      </documentation>
    </annotation>
    <sequence>
      <element name="property" type="tns:tProperty" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <complexType name="tAssertPattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for pattern Assert
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
        <sequence>
          <element name="assertList" type="anyType" minOccurs="0" maxOccurs="1"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tAssertExecutePattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for pattern AssertExecute
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
        <sequence>
          <element name="assertList" type="anyType" minOccurs="0" maxOccurs="1"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tWatchPattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for pattern Watch
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tAssertExecuteWatchStatelessPattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for patterns AssertExecuteWatchStateless
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
        <sequence>
          <element name="assertList" type="anyType" minOccurs="0" maxOccurs="1"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tAssertExecuteWatchStatefulPattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for patterns AssertExecuteWatchStateful
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
        <sequence>
          <element name="assertList" type="anyType" minOccurs="0" maxOccurs="1"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tCallFunctionStatelessPattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for patterns CallFunctionStateless
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
        <sequence>
          <element name="parameterList" type="anyType" minOccurs="0" maxOccurs="1"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tCallFunctionStatefulPattern">
    <annotation>
      <documentation>
        BPEL Decision Service type for patterns CallFunctionStateful
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecideContext">
        <sequence>
          <element name="parameterList" type="anyType" minOccurs="0" maxOccurs="1"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tWatchDecision">
    <annotation>
      <documentation>BPEL Decision Service output parameter for Watch pattern</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecisionContext">
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tAssertExecuteWatchStatelessDecision">
    <annotation>
      <documentation>
        BPEL Decision Service output parameter for AssertExecuteWatchStateless pattern
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecisionContext">
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tAssertExecuteWatchStatefulDecision">
    <annotation>
      <documentation>
        BPEL Decision Service output parameter for AssertExecuteWatchStateful pattern
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecisionContext">
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tCallFunctionStatelessDecision">
    <annotation>
      <documentation>
        BPEL Decision Service output parameter for CallFunctionStateless pattern
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecisionContext">
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tCallFunctionStatefulDecision">
    <annotation>
      <documentation>
        BPEL Decision Service output parameter for CallFunctionStateful pattern
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:tDecisionContext">
      </extension>
    </complexContent>
  </complexType>
  <complexType name="tDecisionContext">
    <annotation>
      <documentation>BPEL Decision Service response base type</documentation>
    </annotation>
    <sequence>
      <element name="resultList" type="anyType" minOccurs="0" maxOccurs="1"/>
    </sequence>
    <attribute name="ecid" type="string" use="optional"/>
  </complexType>
  <complexType name="tDecideContext">
    <annotation>
      <documentation>Decision Service request base type</documentation>
    </annotation>
    <sequence>
      <element name="configURL"      type="string"              minOccurs="0" maxOccurs="1"/>
      <element name="composite"      type="tns:tComposite"      minOccurs="0" maxOccurs="1"/>
      <element name="bpelInstance"   type="bpelpm:tBpelProcess" minOccurs="0" maxOccurs="1"/>
    </sequence>
    <attribute name="name"           type="NCName" use="optional"/>
    <attribute name="ecid"           type="string" use="optional"/>
    <attribute name="conversationId" type="string" use="optional"/>
  </complexType>
  <complexType name="tComposite">
    <attribute name="name"            type="string"/>
    <attribute name="revision"        type="string"/>
    <attribute name="label"           type="string"/>
    <attribute name="applicationName" type="string"/>
    <attribute name="component"       type="string"/>
  </complexType>
  <complexType name="tDecisionServiceError">
    <annotation>
      <documentation>BPEL Decision Service Error base type</documentation>
    </annotation>
    <sequence>
      <element name="errorMessage" type="string" minOccurs="0" maxOccurs="1"/>
    </sequence>
  </complexType>
</schema>