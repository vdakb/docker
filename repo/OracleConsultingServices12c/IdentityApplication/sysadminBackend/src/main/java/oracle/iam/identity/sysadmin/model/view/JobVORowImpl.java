/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Administration Management

    File        :   JobVORowImpl.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    JobVORowImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysadmin.model.view;

import java.sql.Timestamp;

import oracle.jbo.server.ViewRowImpl;

////////////////////////////////////////////////////////////////////////////////
// class JobVORowImpl
// ~~~~~ ~~~~~~~~~~~~
/**
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** --- Tue Mar 07 07:51:54 CET 2017
 ** --- Custom code may be added to this class.
 ** --- Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class JobVORowImpl extends ViewRowImpl {

  //////////////////////////////////////////////////////////////////////////////
  // static final attributes
  //////////////////////////////////////////////////////////////////////////////

  public static final int NAME                = AttributesEnum.name.ordinal();
  public static final int TASK                = AttributesEnum.task.ordinal();
  public static final int STATUS              = AttributesEnum.status.ordinal();
  public static final int STATUSDECODE        = AttributesEnum.statusDecode.ordinal();
  public static final int TRIGGERSTATUS       = AttributesEnum.triggerStatus.ordinal();
  public static final int TRIGGERSTART        = AttributesEnum.triggerStart.ordinal();
  public static final int TRIGGERSTOP         = AttributesEnum.triggerStop.ordinal();
  public static final int TRIGGERNEXT         = AttributesEnum.triggerNext.ordinal();
  public static final int CONCURRENT          = AttributesEnum.concurrent.ordinal();
  public static final int RETRYCOUNT          = AttributesEnum.retryCount.ordinal();
  public static final int TRIGGERTYPE         = AttributesEnum.triggerType.ordinal();
  public static final int CRONTYPE            = AttributesEnum.cronType.ordinal();
  public static final int TRIGGERSTATUSLV     = AttributesEnum.triggerStatusLV.ordinal();
  public static final int TRIGGERTYPELV       = AttributesEnum.triggerTypeLV.ordinal();
  public static final int CRONTYPELV          = AttributesEnum.cronTypeLV.ordinal();

  //////////////////////////////////////////////////////////////////////////////
  // Member classes
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // class StatusEnum
  /**
   ** AttributesEnum: generated enum for identifying attributes and accessors.
   ** Do not modify.
   */

  //////////////////////////////////////////////////////////////////////////////
  // class AttributesEnum
  /**
   ** AttributesEnum: generated enum for identifying attributes and accessors.
   ** Do not modify.
   */
  @SuppressWarnings("oracle.jbo.attribute-order-rule")
  private static enum AttributesEnum {
      name
    , task
    , status
    , statusDecode
    , triggerStatus
    , triggerStart
    , triggerStop
    , triggerNext
    , concurrent
    , retryCount
    , triggerType
    , cronType
    , triggerStatusLV
    , triggerTypeLV
    , cronTypeLV
    ;
  };

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>JobVORowImpl</code> view object that allows use as a
   ** JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public JobVORowImpl() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Accessor and Mutator methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setName
  /**
   ** Sets the attribute value for <code>NAME</code> using the alias name
   ** <code>name</code>.
   **
   ** @param  value              the attribute value for <code>NAME</code> using
                                 the alias name <code>name</code>.
   **                            Allowed object is {@link String}.
   */
  public void setName(final String value) {
    setAttributeInternal(NAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getName
  /**
   ** Returns the attribute value for <code>NAME</code> using the alias
   ** name <code>name</code>.
   **
   ** @return                    the attribute value for <code>NAME</code> using
                                 the alias name <code>name</code>.
   **                            Possible object is {@link String}.
   */
  public String getName() {
    return (String)getAttributeInternal(NAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTask
  /**
   ** Sets the attribute value for <code>TASK</code> using the alias name
   ** <code>task</code>.
   **
   ** @param  value              the attribute value for <code>TASK</code> using
   **                            the alias name <code>task</code>.
   **                            Allowed endpoint is {@link String}.
   */
  public void setTask(final String value) {
    setAttributeInternal(TASK, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTask
  /**
   ** Returns the attribute value for <code>TASK</code> using the alias
   ** name <code>task</code>.
   **
   ** @return                    the attribute value for <code>TASK</code> using
   **                            the alias name <code>task</code>.
   **                            Possible endpoint is {@link String}.
   */
  public String getTask() {
    return (String)getAttributeInternal(TASK);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setStatus
  /**
   ** Sets the attribute value for <code>STATUS</code> using the alias name
   ** <code>status</code>.
   **
   ** @param  value              the attribute value for <code>STATUS</code>
   **                            using the alias name <code>status</code>.
   **                            Allowed object is {@link Integer}.
   */
  public void setStatus(final Integer value) {
    setAttributeInternal(STATUS, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getStatus
  /**
   ** Returns the attribute value for <code>STATUS</code> using the alias
   ** name <code>status</code>.
   **
   ** @return                    the attribute value for <code>STATUS</code>
   **                            using the alias name <code>status</code>.
   **                            Possible object is {@link Integer}.
   */
  public Integer getStatus() {
    return (Integer)getAttributeInternal(STATUS);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setStatusDecode
  /**
   ** Sets the attribute value for <code>STATUSDECODE</code> using the alias
   ** name <code>statusDecode</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>STATUSDECODE</code> using the alias name
   **                            <code>statusDecode</code>.
   **                            Allowed object is {@link String}.
   */
  public void setStatusDecode(final String value) {
    setAttributeInternal(STATUSDECODE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getStatusDecode
  /**
   ** Returns the attribute value for <code>STATUSDECODE</code> using the alias
   ** name <code>statusDecode</code>.
   **
   ** @return                    the attribute value for
   **                            <code>STATUSDECODE</code> using the alias name
   **                            <code>statusDecode</code>.
   **                            Possible object is {@link String}.
   */
  public String getStatusDecode() {
    return (String)getAttributeInternal(STATUSDECODE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTriggerStatus
  /**
   ** Sets the attribute value for <code>TRIGGERSTATUS</code> using the alias
   ** name <code>triggerStatus</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>TRIGGERSTATUS</code> using the alias name
   **                            <code>triggerStatus</code>.
   **                            Allowed display is {@link Boolean}.
   */
  public void setTriggerStatus(final Boolean value) {
    setAttributeInternal(TRIGGERSTATUS, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTriggerStatus
  /**
   ** Returns the attribute value for <code>TASKSTATUS</code> using the alias
   ** name <code>triggerStatus</code>.
   **
   ** @return                    the attribute value for
   **                            <code>TRIGGERSTATUS</code> using the alias name
   **                            <code>triggerStatus</code>.
   **                            Possible display is {@link Boolean}.
   */
  public Boolean getTriggerStatus() {
    return (Boolean)getAttributeInternal(TRIGGERSTATUS);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTriggerStart
  /**
   ** Sets the attribute value for <code>TRIGGERSTART</code> using the alias
   ** name <code>triggerStart</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>TRIGGERSTART</code> using the alias name
   **                            <code>triggerStart</code>.
   **                            Allowed object is {@link Timestamp}.
   */
  public void setTriggerStart(final Timestamp value) {
    setAttributeInternal(TRIGGERSTART, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTriggerStart
  /**
   ** Returns the attribute value for <code>TRIGGERSTART</code> using the alias
   ** name <code>triggerStart</code>.
   **
   ** @return                    the attribute value for
   **                            <code>TRIGGERSTART</code> using the alias name
   **                            <code>triggerStart</code>.
   **                            Possible object is {@link Timestamp}.
   */
  public Timestamp getTriggerStart() {
    return (Timestamp)getAttributeInternal(TRIGGERSTART);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTriggerStop
  /**
   ** Sets the attribute value for <code>TRIGGERSTOP</code> using the alias
   ** name <code>triggerStop</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>TRIGGERSTOP</code> using the alias name
   **                            <code>triggerStop</code>.
   **                            Allowed object is {@link Timestamp}.
   */
  public void setTriggerStop(final Timestamp value) {
    setAttributeInternal(TRIGGERSTOP, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTriggerStop
  /**
   ** Returns the attribute value for <code>TRIGGERSTOP</code> using the alias
   ** name <code>triggerStop</code>.
   **
   ** @return                    the attribute value for
   **                            <code>TRIGGERSTOP</code> using the alias name
   **                            <code>triggerStop</code>.
   **                            Possible object is {@link Timestamp}.
   */
  public Timestamp getTriggerStop() {
    return (Timestamp)getAttributeInternal(TRIGGERSTOP);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTriggerNext
  /**
   ** Sets the attribute value for <code>TRIGGERNEXT</code> using the alias
   ** name <code>triggerNext</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>TRIGGERNEXT</code> using the alias name
   **                            <code>triggerNext</code>.
   **                            Allowed object is {@link Timestamp}.
   */
  public void setTriggerNext(final Timestamp value) {
    setAttributeInternal(TRIGGERNEXT, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTriggerNext
  /**
   ** Returns the attribute value for <code>TRIGGERNEXT</code> using the alias
   ** name <code>triggerNext</code>.
   **
   ** @return                    the attribute value for
   **                            <code>TRIGGERNEXT</code> using the alias name
   **                            <code>triggerNext</code>.
   **                            Possible object is {@link Timestamp}.
   */
  public Timestamp getTriggerNext() {
    return (Timestamp)getAttributeInternal(TRIGGERNEXT);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setConcurrent
  /**
   ** Sets the attribute value for <code>CONCURRENT</code> using the alias name
   ** <code>concurrent</code>.
   **
   ** @param  value              the attribute value for <code>CONCURRENT</code>
   **                            using the alias name <code>concurrent</code>.
   **                            Allowed object is {@link Boolean}.
   */
  public void setConcurrent(final Boolean value) {
    setAttributeInternal(CONCURRENT, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getConcurrent
  /**
   ** Returns the attribute value for <code>CONCURRENT</code> using the alias name
   ** <code>concurrent</code>.
   **
   ** @return                    the attribute value for <code>CONCURRENT</code>
   **                            using the alias name <code>concurrent</code>.
   **                            Possible object is {@link Boolean}.
   */
  public Boolean getConcurrent() {
    return (Boolean)getAttributeInternal(CONCURRENT);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setRetryCount
  /**
   ** Sets the attribute value for <code>RETRYCOUNT</code> using the alias name
   ** <code>retryCount</code>.
   **
   ** @param  value              the attribute value for <code>RETRYCOUNT</code>
   **                            using the alias name <code>retryCount</code>.
   **                            Allowed object is {@link Integer}.
   */
  public void setRetryCount(final Integer value) {
    setAttributeInternal(RETRYCOUNT, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getRetryCount
  /**
   ** Returns the attribute value for <code>RETRYCOUNT</code> using the alias
   ** name <code>retryCount</code>.
   **
   ** @return                    the attribute value for <code>RETRYCOUNT</code>
   **                            using the alias name <code>retryCount</code>.
   **                            Possible object is {@link Integer}.
   */
  public Integer getRetryCount() {
    return (Integer)getAttributeInternal(RETRYCOUNT);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTriggerType
  /**
   ** Sets the attribute value for <code>TRIGGERTYPE</code> using the alias name
   ** <code>triggerType</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>TRIGGERTYPE</code> using the alias
   **                            name <code>triggerType</code>.
   **                            Allowed object is {@link String}.
   */
  public void setTriggerType(final String value) {
    setAttributeInternal(TRIGGERTYPE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTriggerType
  /**
   ** Returns the attribute value for <code>TRIGGERTYPE</code> using the
   ** alias name <code>triggerType</code>.
   **
   ** @return                    the attribute value for
   **                            <code>TRIGGERTYPE</code> using the alias
   **                            name <code>triggerType</code>.
   **                            Possible object is {@link String}.
   */
  public String getTriggerType() {
    return (String)getAttributeInternal(TRIGGERTYPE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCronType
  /**
   ** Sets the attribute value for <code>CRONTYPE</code> using the alias
   ** name <code>cronType</code>.
   **
   ** @param  value              the attribute value for <code>CRONTYPE</code>
   **                            using the alias name <code>cronType</code>.
   **                            Allowed endpoint is {@link String}.
   */
  public void setCronType(final String value) {
    setAttributeInternal(CRONTYPE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCronType
  /**
   ** Returns the attribute value for <code>CRONTYPE</code> using the
   ** alias name <code>cronType</code>.
   **
   ** @return                    the attribute value for <code>CRONTYPE</code>
   **                            using the alias name <code>cronType</code>.
   **                            Possible endpoint is {@link String}.
   */
  public String getCronType() {
    return (String)getAttributeInternal(CRONTYPE);
  }
}