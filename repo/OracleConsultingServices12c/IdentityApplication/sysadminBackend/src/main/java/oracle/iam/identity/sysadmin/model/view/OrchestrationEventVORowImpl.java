/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Administration Management

    File        :   OrchestrationEventVORowImpl.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    OrchestrationEventVORowImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysadmin.model.view;

import oracle.jbo.server.ViewRowImpl;

////////////////////////////////////////////////////////////////////////////////
// class OrchestrationEventVORowImpl
// ~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** --- Tue Mar 07 07:51:54 CET 2017
 ** --- Custom code may be added to this class.
 ** --- Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class OrchestrationEventVORowImpl extends ViewRowImpl {

  //////////////////////////////////////////////////////////////////////////////
  // static final attributes
  //////////////////////////////////////////////////////////////////////////////

  public static final int PROCESSID       = AttributesEnum.processId.ordinal();
  public static final int EVENTID         = AttributesEnum.eventId.ordinal();
  public static final int EVENTNAME       = AttributesEnum.eventName.ordinal();
  public static final int OPERATION       = AttributesEnum.operation.ordinal();
  public static final int STAGE           = AttributesEnum.stage.ordinal();
  public static final int ORDER           = AttributesEnum.order.ordinal();
  public static final int STATUS          = AttributesEnum.status.ordinal();
  public static final int SYNCHRONOUS     = AttributesEnum.synchronous.ordinal();
  public static final int EXECUTION       = AttributesEnum.execution.ordinal();

  //////////////////////////////////////////////////////////////////////////////
  // Member classes
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // class AttributesEnum
  /**
   ** AttributesEnum: generated enum for identifying attributes and accessors.
   ** Do not modify.
   */
  @SuppressWarnings({ "oracle.jbo.attribute-enumeration-classes-rule", "oracle.jbo.attribute-order-rule" })
  private static enum AttributesEnum {
      processId
    , eventId
    , eventName
    , operation
    , stage
    , order
    , status
    , synchronous
    , execution
    ;
  };

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>OrchestrationEventVORowImpl</code> view object that
   ** allows use as a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public OrchestrationEventVORowImpl() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Accessor and Mutator methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setProcessId
  /**
   ** Sets the attribute value for <code>PROCESSID</code> using the alias name
   ** <code>processId</code>.
   **
   ** @param  value              the attribute value for <code>PROCESSID</code>
   **                            using the alias name <code>processId</code>.
   **                            Allowed object is {@link Long}.
   */
  public void setProcessId(final Long value) {
    setAttributeInternal(PROCESSID, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getProcessId
  /**
   ** Returns the attribute value for <code>PROCESSID</code> using the alias
   ** name <code>processId</code>.
   **
   ** @return                    the attribute value for <code>PROCESSID</code>
   **                            using the alias name <code>processId</code>.
   **                            Possible object is {@link Long}.
   */
  public Long getProcessId() {
    return (Long)getAttributeInternal(PROCESSID);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEventId
  /**
   ** Sets the attribute value for <code>EVENTID</code> using the alias name
   ** <code>eventId</code>.
   **
   ** @param  value              the attribute value for <code>EVENTID</code>
   **                            using the alias name <code>eventId</code>.
   **                            Allowed object is {@link Long}.
   */
  public void setEventId(final Long value) {
    setAttributeInternal(EVENTID, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEventId
  /**
   ** Returns the attribute value for <code>EVENTID</code> using the alias
   ** name <code>eventId</code>.
   **
   ** @return                    the attribute value for <code>EVENTID</code>
   **                            using the alias name <code>eventId</code>.
   **                            Possible object is {@link Long}.
   */
  public Long getEventId() {
    return (Long)getAttributeInternal(EVENTID);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEventName
  /**
   ** Sets the attribute value for <code>EVENTNAME</code> using the alias name
   ** <code>eventName</code>.
   **
   ** @param  value              the attribute value for <code>EVENTNAME</code>
   **                            using the alias name <code>eventName</code>.
   **                            Allowed object is {@link String}.
   */
  public void setEventName(final String value) {
    setAttributeInternal(EVENTNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEventName
  /**
   ** Returns the attribute value for <code>EVENTNAME</code> using the alias name
   ** <code>eventName</code>.
   **
   ** @return                    the attribute value for <code>EVENTNAME</code> using
   **                            the alias name <code>eventName</code>.
   **                            Possible object is {@link String}.
   */
  public String getEventName() {
    return (String)getAttributeInternal(EVENTNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setOperation
  /**
   ** Sets the attribute value for <code>OPERATION</code> using the alias name
   ** <code>operation</code>.
   **
   ** @param  value              the attribute value for <code>OPERATION</code>
   **                            using the alias name <code>operation</code>.
   **                            Allowed object is {@link Boolean}.
   */
  public void setOperation(final Boolean value) {
    setAttributeInternal(OPERATION, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getOperation
  /**
   ** Returns the attribute value for <code>OPERATION</code> using the alias
   ** name <code>operation</code>.
   **
   ** @return                    the attribute value for <code>OPERATION</code>
   **                            using the alias name <code>operation</code>.
   **                            Possible object is {@link Boolean}.
   */
  public Boolean getOperation() {
    return (Boolean)getAttributeInternal(OPERATION);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setStage
  /**
   ** Sets the attribute value for <code>STAGE</code> using the alias name
   ** <code>stage</code>.
   **
   ** @param  value              the attribute value for <code>STAGE</code>
   **                            using the alias name <code>stage</code>.
   **                            Allowed object is {@link String}.
   */
  public void setStage(final String value) {
    setAttributeInternal(STAGE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getStage
  /**
   ** Returns the attribute value for <code>STAGE</code> using the alias
   ** name <code>stage</code>.
   **
   ** @return                    the attribute value for <code>STAGE</code>
   **                            using the alias name <code>stage</code>.
   **                            Possible object is {@link String}.
   */
  public String getStage() {
    return (String)getAttributeInternal(STAGE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setOrder
  /**
   ** Sets the attribute value for <code>ORDER</code> using the alias name
   ** <code>order</code>.
   **
   ** @param  value              the attribute value for <code>ORDER</code>
   **                            using the alias name <code>order</code>.
   **                            Allowed object is {@link String}.
   */
  public void setOrder(final String value) {
    setAttributeInternal(ORDER, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getOrder
  /**
   ** Returns the attribute value for <code>ORDER</code> using the alias
   ** name <code>order</code>.
   **
   ** @return                    the attribute value for <code>ORDER</code>
   **                            using the alias name <code>order</code>.
   **                            Possible object is {@link String}.
   */
  public String getOrder() {
    return (String)getAttributeInternal(ORDER);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setStatus
  /**
   ** Sets the attribute value for <code>STATUS</code> using the alias name
   ** <code>status</code>.
   **
   ** @param  value              the attribute value for <code>STATUS</code>
   **                            using the alias name <code>status</code>.
   **                            Allowed display is {@link String}.
   */
  public void setStatus(final String value) {
    setAttributeInternal(STATUS, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getStatus
  /**
   ** Returns the attribute value for <code>STATUS</code> using the alias
   ** name <code>status</code>.
   **
   ** @return                    the attribute value for <code>STATUS</code>
   **                            using the alias name <code>status</code>.
   **                            Possible display is {@link String}.
   */
  public String getStatus() {
    return (String)getAttributeInternal(STATUS);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setSynchronous
  /**
   ** Sets the attribute value for <code>SYNCHRONOUS</code> using the alias name
   ** <code>synchronous</code>.
   **
   ** @param  value              the attribute value for <code>SYNCHRONOUS</code>
   **                            using the alias name <code>synchronous</code>.
   **                            Allowed endpoint is {@link Boolean}.
   */
  public void setSynchronous(final Boolean value) {
    setAttributeInternal(SYNCHRONOUS, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getSynchronous
  /**
   ** Returns the attribute value for <code>SYNCHRONOUS</code> using the alias
   ** name <code>synchronous</code>.
   **
   ** @return                    the attribute value for <code>SYNCHRONOUS</code>
   **                            using the alias name <code>synchronous</code>.
   **                            Possible endpoint is {@link String}.
   */
  public Boolean getSynchronous() {
    return (Boolean)getAttributeInternal(SYNCHRONOUS);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setExecution
  /**
   ** Sets the attribute value for <code>EXECUTION</code> using the alias name
   ** <code>execution</code>.
   **
   ** @param  value              the attribute value for <code>EXECUTION</code>
   **                            using the alias name <code>execution</code>.
   **                            Allowed display is {@link String}.
   */
  public void setExecution(final String value) {
    setAttributeInternal(EXECUTION, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getExecution
  /**
   ** Returns the attribute value for <code>EXECUTION</code> using the alias
   ** name <code>execution</code>.
   **
   ** @return                    the attribute value for <code>EXECUTION</code>
   **                            using the alias name <code>execution</code>.
   **                            Possible display is {@link String}.
   */
  public String getExecution() {
    return (String)getAttributeInternal(EXECUTION);
  }
}