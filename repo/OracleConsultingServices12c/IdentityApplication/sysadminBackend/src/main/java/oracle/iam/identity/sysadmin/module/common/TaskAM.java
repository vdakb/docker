/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Administration Management

    File        :   TaskAM.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the interface
                    TaskAM.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysadmin.module.common;

import java.util.Map;

import oracle.jbo.ApplicationModule;

////////////////////////////////////////////////////////////////////////////////
// class TaskAM
// ~~~~~ ~~~~~~
/**
 ** The <code>Application Module</code> to coordinate the particular task
 ** belonging to tasks.
 ** <p>
 ** ---------------------------------------------------------------------
 ** ---    File generated by Oracle ADF Business Components Design Time.
 ** ---    Mon Mar 20 14:49:55 CET 2017
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public interface TaskAM extends ApplicationModule {

  //////////////////////////////////////////////////////////////////////////////
  // Methods grouped by functionality
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByIdentifier
  /**
   ** Finds a certain <code>Scheduler Task</code> by executing a query against
   ** the persistence layer which leverage the primary key of the entity object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Scheduler Task</code> to fetch from the
   **                            persistence layer.
   **                            <br>
   **                            Allowed object is {@link String}.
   */
  void fetchByIdentifier(final String identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByName
  /**
   ** Finds a certain <code>Scheduler Task</code> by executing a query against
   ** the persistence layer which leverage the unique name of the entity object.
   **
   ** @param  name               the unique name of the
   **                            <code>Scheduler Task</code> to fetch from the
   **                            persistence layer.
   **                            <br>
   **                            Allowed object is {@link String}.
   */
  void fetchByName(final String name);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   createDetail
  /**
   ** Initialize the model to create a new <code>Schedule Task</code>.
   */
  void createDetail();

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchDetail
  /**
   ** Initialize the model to maintain an existing <code>Scheduler Task</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Scheduler Task</code> to fetch from the
   **                            persistence layer.
   **                            <br>
   **                            Allowed object is {@link String}.
   */
  void fetchDetail(final String identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshAttribute
  /**
   ** Refresh the attributes belonging to a certain
   ** <code>Scheduler Task</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Scheduler Task</code> to initialize.
   **                            <br>
   **                            Allowed object is {@link String}.
   */
  void refreshAttribute(final String identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshParameter
  /**
   ** Refresh the <code>Task Parameter</code>s belonging to a certain
   ** <code>Schedule Task</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Schedule Task</code> to query.
   **                            <br>
   **                            Allowed object is {@link String}.
   ** @param  pending            the collection of pending changes belonging to
   **                            added, deleted and modified values.
   **                            <br>
   **                            Allowed object is {@link Map}.
   */
  void refreshParameter(final String identifier, final Map<String, Map<String, Object>> pending);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshJob
  /**
   ** Refresh the jobs belonging to a certain <code>Schedule Task</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Schedule Task</code> to refresh from the
   **                            persistence layer.
   **                            <br>
   **                            Allowed object is {@link String}.
   */
  void refreshJob(final String identifier);
}