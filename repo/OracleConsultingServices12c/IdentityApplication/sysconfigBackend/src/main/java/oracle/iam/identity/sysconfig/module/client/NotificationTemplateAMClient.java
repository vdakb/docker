/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Configuration Management

    File        :   NotificationTemplateAMClient.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    NotificationTemplateAMClient.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysconfig.module.client;

import oracle.jbo.client.remote.ApplicationModuleImpl;

import oracle.iam.identity.sysconfig.module.common.NotificationTemplateAM;

import oracle.iam.identity.sysconfig.schema.NotificationTemplateAdapter;

////////////////////////////////////////////////////////////////////////////////
// class NotificationTemplateAMClient
// ~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 ** The remote {@link ApplicationModuleImpl} to coordinate certain task
 ** belonging to properties.
 ** <p>
 ** ---------------------------------------------------------------------
 ** ---    File generated by Oracle ADF Business Components Design Time.
 ** ---    Mon Mar 06 19:50:30 CET 2017
 ** ---    Custom code may be added to this class.
 ** ---    Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class NotificationTemplateAMClient extends    ApplicationModuleImpl
                                          implements NotificationTemplateAM {

  //////////////////////////////////////////////////////////////////////////////
  // static final attributes
  //////////////////////////////////////////////////////////////////////////////

  // the official serial version ID which says cryptically which version we're
  // compatible with
  @SuppressWarnings("compatibility:-5353544277858348350")
  private static final long serialVersionUID = -1253125776392376966L;

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>NotificationTemplateAMClient</code> application module
   ** that allows use as a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public NotificationTemplateAMClient() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methods of implemented interfaces
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByIdentifier (NotificationTemplateAM)
  /**
   ** Finds a certain <code>NotificationTemplate Definition</code> by executing a query
   ** against the persistence layer which leverage the primary key of the entity
   ** object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>NotificationTemplate Definition</code> to fetch from
   **                            the persistence layer.
   **                            Allowed object is {@link Long}.
   */
  @Override
  public void fetchByIdentifier(final Long identifier) {
    riInvokeExportedMethod(this, "fetchByIdentifier", new String [] {"java.lang.Long"}, new Object[] {identifier});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByName (NotificationTemplateAM)
  /**
   ** Finds a certain <code>NotificationTemplate Definition</code> by executing a query
   ** against the persistence layer which leverage the unique key of the entity
   ** object.
   **
   ** @param  name               the unique identifier of the
   **                            <code>NotificationTemplate Definition</code> to fetch from
   **                            the persistence layer.
   **                            Allowed object is {@link String}.
   */
  @Override
  public void fetchByName(final String name) {
    this.riInvokeExportedMethod(this, "fetchByName", new String [] {"java.lang.String"}, new Object[] {name});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   createDetail (NotificationTemplateAM)
  /**
   ** Initialize the model to create a new <code>NotificationTemplate Definition</code>.
   */
  @Override
  public void createDetail() {
    this.riInvokeExportedMethod(this, "createDetail", null, null);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   createDetail (NotificationTemplateAM)
  /**
   ** Creates a new <code>NotificationTemplate Definition</code>.
   **
   ** @param  mab                the {@link NotificationTemplateAdapter} model adapter bean,
   **                            with fields set.
   */
  @Override
  public void createDetail(final NotificationTemplateAdapter mab) {
    this.riInvokeExportedMethod(this, "createDetail", new String [] {"oracle.iam.identity.sysconfig.schema.NotificationTemplateAdapter"}, new Object[] {mab});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   modifyDetail (NotificationTemplateAM)
  /**
   ** Modifies an existing <code>NotificationTemplate Definition</code>.
   **
   ** @param  mab                the {@link NotificationTemplateAdapter} model adapter bean,
   **                            with fields set to create.
   */
  @Override
  public void modifyDetail(final NotificationTemplateAdapter mab) {
    this.riInvokeExportedMethod(this, "modifyDetail", new String [] {"oracle.iam.identity.sysconfig.schema.NotificationTemplateAdapter"}, new Object[] {mab});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchDetail (NotificationTemplateAM)
  /**
   ** Initialize the model to maintain an existing
   ** <code>NotificationTemplate Definition</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>NotificationTemplate Definition</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link Long}.
   */
  @Override
  public void fetchDetail(final Long identifier) {
    this.riInvokeExportedMethod(this, "fetchDetail", new String [] {"java.lang.Long"}, new Object[] {identifier});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshAttribute (NotificationTemplateAM)
  /**
   ** Refresh the <code>NotificationTemplate Value</code>s belonging to a certain
   ** <code>NotificationTemplate Definition</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>NotificationTemplate Definition</code> to refresh.
   **                            Allowed object is {@link Long}.
   */
  @Override
  public void refreshAttribute(final Long identifier) {
    this.riInvokeExportedMethod(this, "refreshAttribute", new String [] {"java.lang.Long"}, new Object[] {identifier});
  }
}