/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Configuration Management

    File        :   LookupVORowImpl.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    LookupVORowImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysconfig.model.view;

import oracle.jbo.RowSet;

import oracle.jbo.domain.ClobDomain;

import oracle.jbo.server.ViewRowImpl;

////////////////////////////////////////////////////////////////////////////////
// class LookupVORowImpl
// ~~~~~ ~~~~~~~~~~~~~~~
/**
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** --- Tue Mar 07 07:51:54 CET 2017
 ** --- Custom code may be added to this class.
 ** --- Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class LookupVORowImpl extends ViewRowImpl {

  //////////////////////////////////////////////////////////////////////////////
  // static final attributes
  //////////////////////////////////////////////////////////////////////////////

  public static final int KEY       = AttributesEnum.key.ordinal();
  public static final int NAME      = AttributesEnum.name.ordinal();
  public static final int MEANING   = AttributesEnum.meaning.ordinal();
  public static final int GROUP     = AttributesEnum.group.ordinal();
  public static final int TYPE      = AttributesEnum.type.ordinal();
  public static final int FIELD     = AttributesEnum.field.ordinal();
  public static final int REQUIRED  = AttributesEnum.required.ordinal();
  public static final int NOTE      = AttributesEnum.note.ordinal();
  public static final int TYPE_SET  = AttributesEnum.typeSet.ordinal();

  //////////////////////////////////////////////////////////////////////////////
  // Member classes
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // class AttributesEnum
  /**
   ** AttributesEnum: generated enum for identifying attributes and accessors.
   ** Do not modify.
   */
  @SuppressWarnings({ "oracle.jbo.attribute-enumeration-classes-rule", "oracle.jbo.attribute-order-rule" })
  private static enum AttributesEnum {
      key
    , name
    , meaning
    , group
    , type
    , field
    , required
    , note
    , typeSet
    ;
  };

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>LookupVORowImpl</code> view object that allows use as
   ** a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public LookupVORowImpl() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Accessor and Mutator methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setLookupKey
  /**
   ** Sets the attribute value for <code>KEY</code> using the alias name
   ** <code>key</code>.
   **
   ** @param  value              the attribute value for <code>KEY</code> using
   **                            the alias name <code>key</code>.
   **                            Allowed object is {@link String}.
   */
  public void setLookupKey(final String value) {
    setAttributeInternal(KEY, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getLookupKey
  /**
   ** Returns the attribute value for <code>LOOKUPKEY</code> using the alias
   ** name <code>key</code>.
   **
   ** @return                    the attribute value for <code>KEY</code>
   **                            using the alias name <code>key</code>.
   **                            Possible object is {@link String}.
   */
  public String getLookupKey() {
    return (String)getAttributeInternal(KEY);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setName
  /**
   ** Sets the attribute value for <code>NAME</code> using the alias name
   ** <code>name</code>.
   **
   ** @param  value              the attribute value for <code>NAME</code>
   **                            using the alias name <code>name</code>.
   **                            Allowed object is {@link String}.
   */
  public void setName(final String value) {
    setAttributeInternal(NAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getName
  /**
   ** Returns the attribute value for <code>NAME</code> using the alias name
   ** <code>name</code>.
   **
   ** @return                    the attribute value for <code>NAME</code>
   **                            using the alias name <code>name</code>.
   **                            Possible object is {@link String}.
   */
  public String getName() {
    return (String)getAttributeInternal(NAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setMeaning
  /**
   ** Sets the attribute value for <code>MEANING</code> using the alias name
   ** <code>meaning</code>.
   **
   ** @param  value              the attribute value for <code>MEANING</code>
   **                            using the alias name <code>meaning</code>.
   **                            Allowed object is {@link String}.
   */
  public void setMeaning(final String value) {
    setAttributeInternal(MEANING, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getMeaning
  /**
   ** Returns the attribute value for <code>MEANING</code> using the alias name
   ** <code>meaning</code>.
   **
   ** @return                    the attribute value for <code>MEANING</code>
   **                            using the alias name <code>meaning</code>.
   **                            Possible object is {@link String}.
   */
  public String getMeaning() {
    return (String)getAttributeInternal(MEANING);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setGroup
  /**
   ** Sets the attribute value for <code>GROUP</code> using the alias name
   ** <code>group</code>.
   **
   ** @param  value              the attribute value for <code>GROUP</code>
   **                            using the alias name <code>group</code>.
   **                            Allowed object is {@link String}.
   */
  public void setGroup(final String value) {
    setAttributeInternal(GROUP, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getGroup
  /**
   ** Returns the attribute value for <code>GROUP</code> using the alias name
   ** <code>group</code>.
   **
   ** @return                    the attribute value for <code>GROUP</code>
   **                            using the alias name <code>group</code>.
   **                            Possible object is {@link String}.
   */
  public String getGroup() {
    return (String)getAttributeInternal(GROUP);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setType
  /**
   ** Sets the attribute value for <code>TYPE</code> using the alias name
   ** <code>type</code>.
   **
   ** @param  value              the attribute value for <code>TYPE</code>
   **                            using the alias name <code>type</code>.
   **                            Allowed object is {@link String}.
   */
  public void setType(final String value) {
    setAttributeInternal(TYPE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getType
  /**
   ** Returns the attribute value for <code>TYPE</code> using the alias name
   ** <code>type</code>.
   **
   ** @return                    the attribute value for <code>TYPE</code>
   **                            using the alias name <code>type</code>.
   **                            Possible object is {@link String}.
   */
  public String getType() {
    return (String)getAttributeInternal(TYPE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setField
  /**
   ** Sets the attribute value for <code>FIELD</code> using the alias name
   ** <code>field</code>.
   **
   ** @param  value              the attribute value for <code>FIELD</code>
   **                            using the alias name <code>field</code>.
   **                            Allowed object is {@link String}.
   */
  public void setField(final String value) {
    setAttributeInternal(FIELD, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getField
  /**
   ** Returns the attribute value for <code>FIELD</code> using the alias name
   ** <code>field</code>.
   **
   ** @return                    the attribute value for <code>FIELD</code>
   **                            using the alias name <code>field</code>.
   **                            Possible object is {@link String}.
   */
  public String getField() {
    return (String)getAttributeInternal(FIELD);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setRequired
  /**
   ** Sets the attribute value for <code>REQUIRED</code> using the alias name
   ** <code>required</code>.
   ** <p>
   ** <b>Note</b>:
   ** <br>
   ** The Java type of the attributes must be {@link String} because the model
   ** defines it as this type.
   ** <br>
   ** The model adapter is responsible to convert it to the proper type of
   ** {@link Boolean}.
   **
   ** @param  value              the attribute value for <code>REQUIRED</code>
   **                            using the alias name <code>required</code>.
   **                            Allowed object is {@link String}.
   */
  public void setRequired(final String value) {
    setAttributeInternal(REQUIRED, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getRequired
  /**
   ** Returns the attribute value for <code>REQUIRED</code> using the alias name
   ** <code>required</code>.
   ** <p>
   ** <b>Note</b>:
   ** <br>
   ** The Java type of the attributes must be {@link String} because the model
   ** defines it as this type.
   ** <br>
   ** The model adapter is responsible to convert it to the proper type of
   ** {@link Boolean}.
   **
   ** @return                    the attribute value for <code>REQUIRED</code>
   **                            using the alias name <code>required</code>.
   **                            Possible object is {@link String}.
   */
  public String getRequired() {
    return (String)getAttributeInternal(REQUIRED);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setNote
  /**
   ** Sets the attribute value for <code>NOTE</code> using the alias name
   ** <code>note</code>.
   **
   ** @param  value              the attribute value for <code>NOTE</code> using
   **                            the alias name <code>note</code>.
   **                            Allowed object is {@link ClobDomain}.
   */
  public void setNote(final ClobDomain value) {
    setAttributeInternal(NOTE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getNote
  /**
   ** Returns the attribute value for <code>NOTE</code> using the alias name
   ** <code>note</code>.
   **
   ** @return                    the attribute value for <code>NOTE</code> using
   **                            the alias name <code>note</code>.
   **                            Possible object is {@link ClobDomain}.
   */
  public ClobDomain getNote() {
    return (ClobDomain)getAttributeInternal(NOTE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTypeSet
  /**
   ** Sets the attribute value for <code>TYPE_SET</code> using the alias name
   ** <code>typeSet</code>.
   **
   ** @param  value              the attribute value for <code>TYPE_SET</code>
   **                            using the alias name <code>typeSet</code>.
   **                            Allowed object is {@link RowSet}.
   */
  public void setTypeSet(final RowSet value) {
    setAttributeInternal(TYPE_SET, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTypeSet
  /**
   ** Returns the attribute value for <code>TYPE_SET</code> using the alias
   ** name <code>typeSet</code>.
   ** <p>
   ** <b>Note</b>:
   ** <br>
   ** The Java system of the attributes must be {@link String} because the model
   ** defines it as this system.
   ** <br>
   ** The model adapter is responsible to convert it to the proper system of
   ** {@link Boolean}.
   **
   ** @return                    the attribute value for <code>TYPE_SET</code>
   **                            using the alias name <code>typeSet</code>.
   **                            Possible object is {@link RowSet}.
   */
  public RowSet getTypeSet() {
    return (RowSet)getAttributeInternal(TYPE_SET);
  }
}