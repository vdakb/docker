/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Authorization Management

    File        :   ApplicationInstanceAMClient.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    ApplicationInstanceAMClient.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysauthz.module.client;

import java.util.Map;
import java.util.List;

import oracle.jbo.client.remote.ApplicationModuleImpl;

import oracle.iam.platform.authopss.vo.EntityPublication;

import oracle.iam.ui.platform.model.common.IdentityModelAdapterBean;

import oracle.iam.identity.sysauthz.module.common.ApplicationInstanceAM;

import oracle.iam.identity.sysauthz.schema.EntityPublicationAdapter;

////////////////////////////////////////////////////////////////////////////////
// class ApplicationInstanceAMClient
// ~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~
/**
 ** The remote {@link ApplicationModuleImpl} to coordinate certain task
 ** belonging to application instances.
 ** <p>
 ** ---------------------------------------------------------------------
 ** ---    File generated by Oracle ADF Business Components Design Time.
 ** ---    Mon Mar 06 19:50:30 CET 2017
 ** ---    Custom code may be added to this class.
 ** ---    Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class ApplicationInstanceAMClient extends    ApplicationModuleImpl
                                         implements ApplicationInstanceAM {

  //////////////////////////////////////////////////////////////////////////////
  // static final attributes
  //////////////////////////////////////////////////////////////////////////////

  // the official serial version ID which says cryptically which version we're
  // compatible with
  @SuppressWarnings("compatibility:3698737198646574083")
  private static final long serialVersionUID = 9213278315388030350L;

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>ApplicationInstanceAMClient</code> application module
   ** that allows use as a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public ApplicationInstanceAMClient() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methods of implemented interfaces
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByIdentifier (ApplicationInstanceAM)
  /**
   ** Finds a certain <code>Application Instance</code> by executing a query
   ** against the persistence layer which leverage the primary key of the entity
   ** object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Application Instance</code> to fetch from
   **                            the persistence layer.
   */
  @Override
  public void fetchByIdentifier(final String identifier) {
    riInvokeExportedMethod(this, "fetchByIdentifier", new String[]{"java.lang.String"}, new Object[] {identifier});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByName (ApplicationInstanceAM)
  /**
   ** Finds a certain <code>Application Instance</code> by executing a query
   ** against the persistence layer which leverage the unique key of the entity
   ** object.
   **
   ** @param  name               the unique identifier of the
   **                            <code>Application Instance</code> to fetch from
   **                            the persistence layer.
   */
  @Override
  public void fetchByName(final String name) {
    riInvokeExportedMethod(this, "fetchByName", new String[]{"java.lang.String"}, new Object[] {name});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   createDetail (ApplicationInstanceAM)
  /**
   ** Initialize the model to create a new <code>Application Instance</code>.
   */
  @Override
  public void createDetail() {
    this.riInvokeExportedMethod(this, "createDetail", null, null);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchDetail (ApplicationInstanceAM)
  /**
   ** Initialize the model to create a new <code>Application Instance</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Application Instance</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link String}.
   */
  @Override
  public void fetchDetail(final String identifier) {
    this.riInvokeExportedMethod(this, "fetchDetail", new String [] {"java.lang.String"}, new Object[] {identifier});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshAttribute (ApplicationInstanceAM)
  /**
   ** Refresh the attributes belonging to a certain
   ** <code>Application Instance</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Application Instance</code> to
   **                            initialize.
   **                            Allowed object is {@link String}.
   */
  @Override
  public void refreshAttribute(final String identifier) {
    riInvokeExportedMethod(this, "refreshAttribute", new String [] {"java.lang.String"}, new Object[] {identifier});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   requeryPublication (ApplicationInstanceAM)
  /**
   ** Initialize the <code>Entity Publication</code>s belonging to a certain
   ** <code>Application Instance</code> to take in account pending changes on
   ** publications.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Application Instance</code> to
   **                            initialize.
   **                            Allowed object is {@link String}.
   ** @param  pending            the collection of pending changes belonging to
   **                            assigned, revoked and modified publications.
   */
  @Override
  public void requeryPublication(final String identifier, final List<Map<String, EntityPublicationAdapter>> pending) {
    riInvokeExportedMethod(this, "requeryPublication", new String [] {"java.lang.String", "java.util.List<java.util.Map>"}, new Object[] {identifier, pending});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   applyPublication (ApplicationInstanceAM)
  /**
   ** Applies the <code>Entity Publication</code>s belonging to a certain
   ** <code>Application Instance</code> to take in account pending changes on
   ** publications.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Application Instance</code> to
   **                            initialize.
   **                            Allowed object is {@link String}.
   ** @param  pending            the collection of pending changes belonging to
   **                            assigned, revoked and modified publications.
   */
  @Override
  public void applyPublication(final String identifier, final List<Map<String, EntityPublicationAdapter>> pending) {
    riInvokeExportedMethod(this, "applyPublication", new String [] {"java.lang.String", "java.util.List<java.util.Map>"}, new Object[] {identifier, pending});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   assignPublication (ApplicationInstanceAM)
  /**
   ** Assigns the passed <code>Entity Publication</code>s to an
   ** <code>Application Instance</code>.
   **
   ** @param  selection          the {@link List} of organizations represented
   **                            by {@link IdentityModelAdapterBean} to be
   **                            assigned.
   ** @param  entitlement        <code>true</code> if the publications should
   **                            also assigned to every entitlement which
   **                            belongs to the
   **                            <code>Application Instance</code>.
   */
  @Override
  public void assignPublication(final List<IdentityModelAdapterBean> selection, final Boolean entitlement) {
    riInvokeExportedMethod(this, "assignPublication", new String[] { "java.util.List<IdentityModelAdapterBean>", "java.lang.Boolean" }, new Object[] { selection, entitlement });
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   updatePublication (ApplicationInstanceAM)
  /**
   ** Performing an update on the passed <code>Entity Publications</code>.
   **
   ** @param  entityId           the system identifier of the entity to update.
   ** @param  metadata           the data providing the changes.
   */
  @Override
  public void updatePublication(final String entityId, final Map<String, Map<String, Object>> metadata) {
    riInvokeExportedMethod(this, "applyPublication", new String[]{"java.lang.String", "java.util.Map<String, Map<String, Object>>"}, new Object[] {entityId, metadata});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   revokePublication (ApplicationInstanceAM)
  /**
   ** Revokes the passed <code>Entity Publication</code>s from an
   ** <code>Application Instance</code>.
   **
   ** @param  selection          the {@link List} of {@link EntityPublication}
   **                            to revoke.
   */
  @Override
  public void revokePublication(final List<EntityPublication> selection) {
    riInvokeExportedMethod(this, "revokePublication", new String[] { "java.util.List<oracle.iam.platform.authopss.vo.EntityPublication>" }, new Object[] { selection });
  }
}