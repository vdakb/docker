/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Authorization Management

    File        :   CatalogItemAM.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the interface
                    CatalogItemAM.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysauthz.module.common;

import oracle.jbo.ApplicationModule;

////////////////////////////////////////////////////////////////////////////////
// class CatalogItemAM
// ~~~~~ ~~~~~~~~~~~~~
/**
 ** The <code>Application Module</code> to coordinate the particular task
 ** belonging to entitlements.
 ** <p>
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** --- Mon Mar 06 19:50:30 CET 2017
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public interface CatalogItemAM extends ApplicationModule {

  //////////////////////////////////////////////////////////////////////////////
  // Methods grouped by functionality
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByIdentifier
  /**
   ** Finds a certain <code>Catalog Item</code> by executing a query against the
   ** persistence layer which leverage the primary key of the entity object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Catalog Item</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link Long}.
   */
  void fetchByIdentifier(final Long identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByName
  /**
   ** Finds a certain <code>Catalog Item</code> by executing a query against the
   ** persistence layer which leverage the unique key of the entity object.
   **
   ** @param  name               the system identifier of the
   **                            <code>Catalog Item</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link String}.
   */
  void fetchByName(final String name);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshAttribute
  /**
   ** Refresh the attributes belonging to a certain <code>Catalog Item</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Catalog Item</code> to initialize.
   **                            Allowed object is {@link Long}.
   */
  void refreshAttribute(final Long identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   assignRole
  /**
   ** Refresh the attributes belonging to a certain <code>Catalog Item</code>.
   **
   ** @param  roleKey            the system identifier of the
   **                            <code>Role</code> to asign.
   **                            Allowed object is {@link Long}.
   ** @param  attributeName      the name of the attribute this event
   **                            belongs to.
   **                            Allowed object is {@link String}.
   */
  void assignRole(final Long roleKey, final String attributeName);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   assignUser
  /**
   ** Refresh the attributes belonging to a certain <code>Catalog Item</code>.
   **
   ** @param  userKey            the system identifier of the
   **                            <code>User</code> to asign.
   **                            Allowed object is {@link Long}.
   ** @param  attributeName      the name of the attribute this event
   **                            belongs to.
   **                            Allowed object is {@link String}.
   */
  void assignUser(final Long userKey, final String attributeName);
}