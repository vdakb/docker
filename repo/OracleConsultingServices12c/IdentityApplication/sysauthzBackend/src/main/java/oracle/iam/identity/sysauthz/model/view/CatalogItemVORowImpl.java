/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Authorization Management

    File        :   CatalogItemVORowImpl.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    CatalogItemVORowImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysauthz.model.view;

import oracle.jbo.server.ViewRowImpl;

import oracle.iam.identity.sysauthz.model.entity.CatalogItemEOImpl;

////////////////////////////////////////////////////////////////////////////////
// class CatalogItemVORowImpl
// ~~~~~ ~~~~~~~~~~~~~~~~~~~~
/**
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** --- Tue Mar 07 07:51:54 CET 2017
 ** --- Custom code may be added to this class.
 ** --- Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class CatalogItemVORowImpl extends ViewRowImpl {

  //////////////////////////////////////////////////////////////////////////////
  // static final attributes
  //////////////////////////////////////////////////////////////////////////////

  public static final int CATALOGID                  = AttributesEnum.catalogId.ordinal();
  public static final int ENTITYID                   = AttributesEnum.entityId.ordinal();
  public static final int ENTITYTYPE                 = AttributesEnum.entityType.ordinal();
  public static final int ENTITYICON                 = AttributesEnum.entityIcon.ordinal();
  public static final int ENTITYNAME                 = AttributesEnum.entityName.ordinal();
  public static final int ENTITYDISPLAYNAME          = AttributesEnum.entityDisplayName.ordinal();
  public static final int ENTITYDESCRIPTION          = AttributesEnum.entityDescription.ordinal();
  public static final int ENTITYPARENTID             = AttributesEnum.entityParentId.ordinal();
  public static final int ENTITYPARENTTYPE           = AttributesEnum.entityParentType.ordinal();
  public static final int CATEGORY                   = AttributesEnum.category.ordinal();
  public static final int RISK                       = AttributesEnum.risk.ordinal();
  public static final int RISKICON                   = AttributesEnum.riskIcon.ordinal();
  public static final int RISKUPDATE                 = AttributesEnum.riskUpdate.ordinal();
  public static final int DELETED                    = AttributesEnum.deleted.ordinal();
  public static final int AUDITABLE                  = AttributesEnum.auditable.ordinal();
  public static final int REQUESTABLE                = AttributesEnum.requestable.ordinal();
  public static final int CERTIFIABLE                = AttributesEnum.certifiable.ordinal();
  public static final int AUDITOBJECTIVE             = AttributesEnum.auditObjective.ordinal();
  public static final int APPROVERUSER               = AttributesEnum.approverUser.ordinal();
  public static final int APPROVERUSERNAME           = AttributesEnum.approverUserName.ordinal();
  public static final int APPROVERUSERDISPLAYNAME    = AttributesEnum.approverUserDisplayName.ordinal();
  public static final int APPROVERROLE               = AttributesEnum.approverRole.ordinal();
  public static final int APPROVERROLENAME           = AttributesEnum.approverRoleName.ordinal();
  public static final int APPROVERROLEDISPLAYNAME    = AttributesEnum.approverRoleDisplayName.ordinal();
  public static final int CERTIFIERUSER              = AttributesEnum.certifierUser.ordinal();
  public static final int CERTIFIERUSERNAME          = AttributesEnum.certifierUserName.ordinal();
  public static final int CERTIFIERUSERDISPLAYNAME   = AttributesEnum.certifierUserDisplayName.ordinal();
  public static final int CERTIFIERROLE              = AttributesEnum.certifierRole.ordinal();
  public static final int CERTIFIERROLENAME          = AttributesEnum.certifierRoleName.ordinal();
  public static final int CERTIFIERROLEDISPLAYNAME   = AttributesEnum.certifierRoleDisplayName.ordinal();
  public static final int FULFILLMENTUSER            = AttributesEnum.fulfillmentUser.ordinal();
  public static final int FULFILLMENTUSERNAME        = AttributesEnum.fulfillmentUserName.ordinal();
  public static final int FULFILLMENTUSERDISPLAYNAME = AttributesEnum.fulfillmentUserDisplayName.ordinal();
  public static final int FULFILLMENTROLE            = AttributesEnum.fulfillmentRole.ordinal();
  public static final int FULFILLMENTROLENAME        = AttributesEnum.fulfillmentRoleName.ordinal();
  public static final int FULFILLMENTROLEDISPLAYNAME = AttributesEnum.fulfillmentRoleDisplayName.ordinal();
  public static final int TAGS                       = AttributesEnum.tags.ordinal();
  public static final int USERTAGS                   = AttributesEnum.userTags.ordinal();

  //////////////////////////////////////////////////////////////////////////////
  // Member classes
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // class AttributesEnum
  /**
   ** AttributesEnum: generated enum for identifying attributes and accessors.
   ** Do not modify.
   */
  private static enum AttributesEnum {
     catalogId
   , entityId
   , entityType
   , entityIcon
   , entityName
   , entityDisplayName
   , entityDescription
   , entityParentId
   , entityParentType
   , category
   , risk
   , riskIcon
   , riskUpdate
   , deleted
   , auditable
   , requestable
   , certifiable
   , auditObjective
   , approverUser
   , approverUserName
   , approverUserDisplayName
   , approverRole
   , approverRoleName
   , approverRoleDisplayName
   , certifierUser
   , certifierUserName
   , certifierUserDisplayName
   , certifierRole
   , certifierRoleName
   , certifierRoleDisplayName
   , fulfillmentUser
   , fulfillmentUserName
   , fulfillmentUserDisplayName
   , fulfillmentRole
   , fulfillmentRoleName
   , fulfillmentRoleDisplayName
   , tags
   , userTags
   ;
  };

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>CatalogItemVORowImpl</code> view object that allows use
   ** as a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public CatalogItemVORowImpl() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Accessor and Mutator methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCatalogItemEO
  /**
   ** Returns the Catalog Item entity object.
   **
   ** @return                    the getCatalogItemEO
   */
  public CatalogItemEOImpl getCatalogItemEO() {
    return (CatalogItemEOImpl)getEntity(0);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCatalogId
  /**
   ** Sets the attribute value for <code>CATALOGID</code> using the alias name
   ** <code>catalogId</code>.
   **
   ** @param  value              the attribute value for <code>CATALOGID</code>
   **                            using the alias name <code>catalogId</code>.
   **                            Allowed object is {@link Long}.
   */
  public void setCatalogId(final Long value) {
    setAttributeInternal(CATALOGID, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCatalogId
  /**
   ** Returns the attribute value for <code>CATALOGID</code> using the alias
   ** name <code>catalogId</code>.
   **
   ** @return                    the attribute value for <code>CATALOGID</code>
   **                            using the alias name <code>catalogId</code>.
   **                            Possible object is {@link Long}.
   */
  public Long getCatalogId() {
    return (Long)getAttributeInternal(CATALOGID);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityId
  /**
   ** Sets the attribute value for <code>ENTITYID</code> using the alias name
   ** <code>entityId</code>.
   **
   ** @param  value              the attribute value for <code>ENTITYID</code>
   **                            using the alias name <code>entityId</code>.
   **                            Allowed object is {@link Long}.
   */
  public void setEntityId(final Long value) {
    setAttributeInternal(ENTITYID, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityId
  /**
   ** Returns the attribute value for <code>ENTITYID</code> using the alias name
   ** <code>entityId</code>.
   **
   ** @return                    the attribute value for <code>ENTITYID</code>
   **                            using the alias name <code>entityId</code>.
   **                            Possible object is {@link Long}.
   */
  public Long getEntityId() {
    return (Long)getAttributeInternal(ENTITYID);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityType
  /**
   ** Sets the attribute value for <code>ENTITYTYPE</code> using the alias
   ** name <code>entityType</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>ENTITYTYPE</code> using the alias
   **                            name <code>entityType</code>.
   **                            Allowed display is {@link String}.
   */
  public void setEntityType(final String value) {
    setAttributeInternal(ENTITYTYPE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityType
  /**
   ** Returns the attribute value for <code>ENTITYTYPE</code> using the
   ** alias name <code>entityType</code>.
   **
   ** @return                    the attribute value for
   **                            <code>ENTITYTYPE</code> using the alias
   **                            name <code>entityType</code>.
   **                            Possible display is {@link String}.
   */
  public String getEntityType() {
    return (String)getAttributeInternal(ENTITYTYPE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityIcon
  /**
   ** Sets the attribute value for <code>ENTITYICON</code> using the alias
   ** name <code>entityIcon</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>ENTITYICON</code> using the alias
   **                            name <code>entityIcon</code>.
   **                            Allowed display is {@link String}.
   */
  public void setEntityIcon(final String value) {
    setAttributeInternal(ENTITYICON, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityIcon
  /**
   ** Returns the attribute value for <code>ENTITYICON</code> using the
   ** alias name <code>entityIcon</code>.
   **
   ** @return                    the attribute value for
   **                            <code>ENTITYICON</code> using the alias
   **                            name <code>entityIcon</code>.
   **                            Possible display is {@link String}.
   */
  public String getEntityIcon() {
    return (String)getAttributeInternal(ENTITYICON);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityName
  /**
   ** Sets the attribute value for <code>ENTITYNAME</code> using the alias name
   ** <code>entityName</code>.
   **
   ** @param  value              the attribute value for <code>ENTITYNAME</code>
   **                            using the alias name <code>entityName</code>.
   **                            Allowed object is {@link String}.
   */
  public void setEntityName(final String value) {
    setAttributeInternal(ENTITYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityName
  /**
   ** Returns the attribute value for <code>ENTITYNAME</code> using the alias
   ** name <code>entityName</code>.
   **
   ** @return                    the attribute value for <code>ENTITYNAME</code>
   **                            using the alias name <code>entityName</code>.
   **                            Possible object is {@link String}.
   */
  public String getEntityName() {
    return (String)getAttributeInternal(ENTITYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityDisplayName
  /**
   ** Sets the attribute value for <code>ENTITYDISPLAYNAME</code> using the
   ** alias name <code>entityDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>ENTITYDISPLAYNAME</code> using the alias
   **                            name <code>entityDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setEntityDisplayName(final String value) {
    setAttributeInternal(ENTITYDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityDisplayName
  /**
   ** Returns the attribute value for <code>ENTITYDISPLAYNAME</code> using the
   ** alias name <code>entityDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>ENTITYDISPLAYNAME</code> using the alias
   **                            name <code>entityDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getEntityDisplayName() {
    return (String)getAttributeInternal(ENTITYDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityDescription
  /**
   ** Sets the attribute value for <code>ENTITYDESCRIPTION</code> using the
   ** alias name <code>entityDescription</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>ENTITYDESCRIPTION</code>
   **                            using the alias name
   **                            <code>entityDescription</code>.
   **                            Allowed endpoint is {@link String}.
   */
  public void setEntityDescription(final String value) {
    setAttributeInternal(ENTITYDESCRIPTION, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityDescription
  /**
   ** Returns the attribute value for <code>ENTITYDESCRIPTION</code> using the
   ** alias name <code>entityDescription</code>.
   **
   ** @return                    the attribute value for
   **                            <code>ENTITYDESCRIPTION</code>
   **                            using the alias name
   **                            <code>entityDescription</code>.
   **                            Possible endpoint is {@link String}.
   */
  public String getEntityDescription() {
    return (String)getAttributeInternal(ENTITYDESCRIPTION);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityParentId
  /**
   ** Sets the attribute value for <code>ENTITYPARENTID</code> using the alias
   ** name <code>entityParentId</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>ENTITYPARENTID</code> using the alias
   **                            name <code>entityParentId</code>.
   **                            Allowed object is {@link Long}.
   */
  public void setEntityParentId(final Long value) {
    setAttributeInternal(ENTITYPARENTID, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityParentId
  /**
   ** Returns the attribute value for <code>ENTITYPARENTID</code> using the
   ** alias name <code>entityParentId</code>.
   **
   ** @return                    the attribute value for
   **                            <code>ENTITYPARENTID</code> using the alias
   **                            name <code>entityParentId</code>.
   **                            Possible object is {@link Long}.
   */
  public Long getEntityParentId() {
    return (Long)getAttributeInternal(ENTITYPARENTID);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setEntityParentType
  /**
   ** Sets the attribute value for <code>ENTITYPARENTTYPE</code> using the alias
   ** name <code>entityParentType</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>ENTITYPARENTTYPE</code> using the alias
   **                            name <code>entityParentType</code>.
   **                            Allowed display is {@link String}.
   */
  public void setEntityParentType(final String value) {
    setAttributeInternal(ENTITYPARENTTYPE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getEntityParentType
  /**
   ** Returns the attribute value for <code>ENTITYPARENTTYPE</code> using the
   ** alias name <code>entityParentType</code>.
   **
   ** @return                    the attribute value for
   **                            <code>ENTITYPARENTTYPE</code> using the alias
   **                            name <code>entityParentType</code>.
   **                            Possible display is {@link String}.
   */
  public String getEntityParentType() {
    return (String)getAttributeInternal(ENTITYPARENTTYPE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCategory
  /**
   ** Sets the attribute value for <code>CATEGORY</code> using the alias name
   ** <code>category</code>.
   **
   ** @param  value              the attribute value for <code>CATEGORY</code>
   **                            using the alias name <code>category</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCategory(final String value) {
    setAttributeInternal(CATEGORY, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCategory
  /**
   ** Returns the attribute value for <code>CATEGORY</code> using the alias
   ** name <code>category</code>.
   **
   ** @return                    the attribute value for <code>CATEGORY</code>
   **                            using the alias name <code>category</code>.
   **                            Possible display is {@link String}.
   */
  public String getCategory() {
    return (String)getAttributeInternal(CATEGORY);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setRisk
  /**
   ** Sets the attribute value for <code>RISK</code> using the alias name
   ** <code>risk</code>.
   **
   ** @param  value              the attribute value for <code>RISK</code>
   **                            using the alias name <code>risk</code>.
   **                            Allowed display is {@link String}.
   */
  public void setRisk(final String value) {
    setAttributeInternal(RISK, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getRisk
  /**
   ** Returns the attribute value for <code>RISK</code> using the alias
   ** name <code>risk</code>.
   **
   ** @return                    the attribute value for <code>RISK</code>
   **                            using the alias name <code>risk</code>.
   **                            Possible display is {@link String}.
   */
  public String getRisk() {
    return (String)getAttributeInternal(RISK);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setRiskIcon
  /**
   ** Sets the attribute value for <code>RISKICON</code> using the alias name
   ** <code>riskIcon</code>.
   **
   ** @param  value              the attribute value for <code>RISKICON</code>
   **                            using the alias name <code>riskIcon</code>.
   **                            Allowed display is {@link String}.
   */
  public void setRiskIcon(final String value) {
    setAttributeInternal(RISKICON, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getRiskIcon
  /**
   ** Returns the attribute value for <code>RISKICON</code> using the alias name
   ** <code>riskIcon</code>.
   **
   ** @return                    the attribute value for <code>RISKICON</code>
   **                            using the alias name <code>riskIcon</code>.
   **                            Possible display is {@link String}.
   */
  public String getRiskIcon() {
    return (String)getAttributeInternal(RISKICON);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setDeleted
  /**
   ** Sets the attribute value for <code>DELETED</code> using the alias name
   ** <code>deleted</code>.
   **
   ** @param  value              the attribute value for <code>DELETED</code>
   **                            using the alias name <code>deleted</code>.
   **                            Allowed display is {@link Boolean}.
   */
  public void setDeleted(final Boolean value) {
    setAttributeInternal(DELETED, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getDeleted
  /**
   ** Returns the attribute value for <code>DELETED</code> using the alias name
   ** <code>deleted</code>.
   **
   ** @return                    the attribute value for <code>DELETED</code>
   **                            using the alias name <code>deleted</code>.
   **                            Possible display is {@link Boolean}.
   */
  public Boolean getDeleted() {
    return (Boolean)getAttributeInternal(DELETED);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setAuditable
  /**
   ** Sets the attribute value for <code>AUDITABLE</code> using the alias name
   ** <code>auditable</code>.
   **
   ** @param  value              the attribute value for <code>AUDITABLE</code>
   **                            using the alias name <code>auditable</code>.
   **                            Allowed display is {@link Boolean}.
   */
  public void setAuditable(final Boolean value) {
    setAttributeInternal(AUDITABLE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getAuditable
  /**
   ** Returns the attribute value for <code>AUDITABLE</code> using the alias
   ** name <code>auditable</code>.
   **
   ** @return                    the attribute value for <code>AUDITABLE</code>
   **                            using the alias name <code>auditable</code>.
   **                            Possible display is {@link Boolean}.
   */
  public Boolean getAuditable() {
    return (Boolean)getAttributeInternal(AUDITABLE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setRequestable
  /**
   ** Sets the attribute value for <code>REQUESTABLE</code> using the alias name
   ** <code>requestable</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>REQUESTABLE</code>
   **                            using the alias name <code>requestable</code>.
   **                            Allowed display is {@link Boolean}.
   */
  public void setRequestable(final Boolean value) {
    setAttributeInternal(REQUESTABLE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getRequestable
  /**
   ** Returns the attribute value for <code>REQUESTABLE</code> using the alias
   ** name <code>requestable</code>.
   **
   ** @return                    the attribute value for
   **                            <code>REQUESTABLE</code>
   **                            using the alias name <code>requestable</code>.
   **                            Possible display is {@link Boolean}.
   */
  public Boolean getRequestable() {
    return (Boolean)getAttributeInternal(REQUESTABLE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifiable
  /**
   ** Sets the attribute value for <code>CERTIFIABLE</code> using the alias name
   ** <code>certifiable</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIABLE</code>
   **                            using the alias name <code>certifiable</code>.
   **                            Allowed display is {@link Boolean}.
   */
  public void setCertifiable(final Boolean value) {
    setAttributeInternal(CERTIFIABLE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifiable
  /**
   ** Returns the attribute value for <code>CERTIFIABLE</code> using the alias
   ** name <code>certifiable</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIABLE</code>
   **                            using the alias name <code>certifiable</code>.
   **                            Possible display is {@link Boolean}.
   */
  public Boolean getCertifiable() {
    return (Boolean)getAttributeInternal(CERTIFIABLE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setAuditObjective
  /**
   ** Sets the attribute value for <code>AUDITOBJECTIVE</code> using the alias
   ** name <code>auditObjectiveId</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>AUDITOBJECTIVE</code> using the alias
   **                            name <code>auditObjectiveId</code>.
   **                            Allowed display is {@link String}.
   */
  public void setAuditObjective(final String value) {
    setAttributeInternal(AUDITOBJECTIVE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getAuditObjective
  /**
   ** Returns the attribute value for <code>AUDITOBJECTIVE</code> using the
   ** alias name <code>auditObjectiveId</code>.
   **
   ** @return                    the attribute value for
   **                            <code>AUDITOBJECTIVE</code> using the alias
   **                            name <code>auditObjectiveId</code>.
   **                            Possible display is {@link String}.
   */
  public String getAuditObjective() {
    return (String)getAttributeInternal(AUDITOBJECTIVE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setApproverUser
  /**
   ** Sets the attribute value for <code>APPROVERUSER</code> using the alias
   ** name <code>approverUser</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>APPROVERUSER</code> using the alias
   **                            name <code>approverUser</code>.
   **                            Allowed display is {@link String}.
   */
  public void setApproverUser(final String value) {
    setAttributeInternal(APPROVERUSER, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getApproverUser
  /**
   ** Returns the attribute value for <code>APPROVERUSER</code> using the
   ** alias name <code>approverUser</code>.
   **
   ** @return                    the attribute value for
   **                            <code>APPROVERUSER</code> using the alias
   **                            name <code>approverUser</code>.
   **                            Possible display is {@link String}.
   */
  public String getApproverUser() {
    return (String)getAttributeInternal(APPROVERUSER);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setApproverUserName
  /**
   ** Sets the attribute value for <code>APPROVERUSERNAME</code> using the alias
   ** name <code>approverUserName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>APPROVERUSERNAME</code> using the alias
   **                            name <code>approverUserName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setApproverUserName(final String value) {
    setAttributeInternal(APPROVERUSERNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getApproverUserName
  /**
   ** Returns the attribute value for <code>APPROVERUSERNAME</code> using the
   ** alias name <code>approverUserName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>APPROVERUSERNAME</code> using the alias
   **                            name <code>approverUserName</code>.
   **                            Possible display is {@link String}.
   */
  public String getApproverUserName() {
    return (String)getAttributeInternal(APPROVERUSERNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setApproverUserDisplayName
  /**
   ** Sets the attribute value for <code>APPROVERUSERDISPLAYNAME</code> using
   ** the alias name <code>approverUserDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>APPROVERUSERDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>approverUserDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setApproverUserDisplayName(final String value) {
    setAttributeInternal(APPROVERUSERDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getApproverUserDisplayName
  /**
   ** Returns the attribute value for <code>APPROVERUSERDISPLAYNAME</code> using
   ** the alias name <code>approverUserDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>APPROVERUSERDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>approverUserDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getApproverUserDisplayName() {
    return (String)getAttributeInternal(APPROVERUSERDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setApproverRole
  /**
   ** Sets the attribute value for <code>APPROVERROLE</code> using the alias
   ** name <code>approverRole</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>APPROVERROLE</code> using the alias
   **                            name <code>approverRole</code>.
   **                            Allowed display is {@link String}.
   */
  public void setApproverRole(final String value) {
    setAttributeInternal(APPROVERROLE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getApproverRole
  /**
   ** Returns the attribute value for <code>APPROVERROLE</code> using the
   ** alias name <code>approverRole</code>.
   **
   ** @return                    the attribute value for
   **                            <code>APPROVERROLE</code> using the alias
   **                            name <code>approverRole</code>.
   **                            Possible display is {@link String}.
   */
  public String getApproverRole() {
    return (String)getAttributeInternal(APPROVERROLE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setApproverRoleName
  /**
   ** Sets the attribute value for <code>APPROVERROLENAME</code> using the alias
   ** name <code>approverRoleName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>APPROVERROLENAME</code> using the alias
   **                            name <code>approverRoleName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setApproverRoleName(final String value) {
    setAttributeInternal(APPROVERROLENAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getApproverRoleName
  /**
   ** Returns the attribute value for <code>APPROVERROLENAME</code> using the
   ** alias name <code>approverRoleName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>APPROVERROLENAME</code> using the alias
   **                            name <code>approverRoleName</code>.
   **                            Possible display is {@link String}.
   */
  public String getApproverRoleName() {
    return (String)getAttributeInternal(APPROVERROLENAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setApproverRoleDisplayName
  /**
   ** Sets the attribute value for <code>APPROVERROLEDISPLAYNAME</code> using
   ** the alias name <code>approverRoleDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>APPROVERROLEDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>approverRoleDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setApproverRoleDisplayName(final String value) {
    setAttributeInternal(APPROVERROLEDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getApproverRoleDisplayName
  /**
   ** Returns the attribute value for <code>APPROVERROLEDISPLAYNAME</code> using
   ** the alias name <code>approverRoleDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>APPROVERROLEDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>approverRoleDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getApproverRoleDisplayName() {
    return (String)getAttributeInternal(APPROVERROLEDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifierUser
  /**
   ** Sets the attribute value for <code>CERTIFIERUSER</code> using the alias
   ** name <code>certifierUser</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIERUSER</code> using the alias
   **                            name <code>approverUser</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCertifierUser(final String value) {
    setAttributeInternal(CERTIFIERUSER, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifierUser
  /**
   ** Returns the attribute value for <code>CERTIFIERUSER</code> using the
   ** alias name <code>certifierUser</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIERUSER</code> using the alias
   **                            name <code>approverUser</code>.
   **                            Possible display is {@link String}.
   */
  public String getCertifierUser() {
    return (String)getAttributeInternal(CERTIFIERUSER);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifierUserName
  /**
   ** Sets the attribute value for <code>CERTIFIERUSERNAME</code> using the
   ** alias name <code>certifierUserName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIERUSERNAME</code> using the alias
   **                            name <code>certifierUserName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCertifierUserName(final String value) {
    setAttributeInternal(CERTIFIERUSERNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifierUserName
  /**
   ** Returns the attribute value for <code>CERTIFIERUSERNAME</code> using the
   ** alias name <code>certifierUserName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIERUSERNAME</code> using the alias
   **                            name <code>certifierUserName</code>.
   **                            Possible display is {@link String}.
   */
  public String getCertifierUserName() {
    return (String)getAttributeInternal(CERTIFIERUSERNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifierUserDisplayName
  /**
   ** Sets the attribute value for <code>CERTIFIERUSERDISPLAYNAME</code> using
   ** the alias name <code>certifierUserDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIERUSERDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>certifierUserDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCertifierUserDisplayName(final String value) {
    setAttributeInternal(CERTIFIERUSERDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifierUserDisplayName
  /**
   ** Returns the attribute value for <code>CERTIFIERUSERDISPLAYNAME</code>
   ** using the alias name <code>certifierUserDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIERUSERDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>certifierUserDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getCertifierUserDisplayName() {
    return (String)getAttributeInternal(CERTIFIERUSERDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifierRole
  /**
   ** Sets the attribute value for <code>CERTIFIERROLE</code> using the alias
   ** name <code>certifierRole</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIERROLE</code> using the alias
   **                            name <code>approverRole</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCertifierRole(final String value) {
    setAttributeInternal(CERTIFIERROLE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifierRole
  /**
   ** Returns the attribute value for <code>CERTIFIERROLE</code> using the
   ** alias name <code>certifierRole</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIERROLE</code> using the alias
   **                            name <code>approverRole</code>.
   **                            Possible display is {@link String}.
   */
  public String getCertifierRole() {
    return (String)getAttributeInternal(CERTIFIERROLE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifierRoleName
  /**
   ** Sets the attribute value for <code>CERTIFIERROLENAME</code> using the
   ** alias name <code>certifierRoleName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIERROLENAME</code> using the alias
   **                            name <code>certifierRoleName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCertifierRoleName(final String value) {
    setAttributeInternal(CERTIFIERROLENAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifierRoleName
  /**
   ** Returns the attribute value for <code>CERTIFIERROLENAME</code> using the
   ** alias name <code>certifierRoleName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIERROLENAME</code> using the alias
   **                            name <code>certifierRoleName</code>.
   **                            Possible display is {@link String}.
   */
  public String getCertifierRoleName() {
    return (String)getAttributeInternal(CERTIFIERROLENAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setCertifierRoleDisplayName
  /**
   ** Sets the attribute value for <code>CERTIFIERROLEDISPLAYNAME</code> using
   ** the alias name <code>certifierRoleDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>CERTIFIERROLEDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>certifierRoleDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setCertifierRoleDisplayName(final String value) {
    setAttributeInternal(CERTIFIERROLEDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getCertifierRoleDisplayName
  /**
   ** Returns the attribute value for <code>CERTIFIERROLEDISPLAYNAME</code>
   ** using the alias name <code>certifierRoleDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>CERTIFIERROLEDISPLAYNAME</code> using the
   **                            alias name
   **                            <code>certifierRoleDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getCertifierRoleDisplayName() {
    return (String)getAttributeInternal(CERTIFIERROLEDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setFulfillmentUserName
  /**
   ** Sets the attribute value for <code>FULFILLMENTUSERNAME</code> using the
   ** alias name <code>fulfillmentUserName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>FULFILLMENTUSERNAME</code> using the
   **                            alias name <code>fulfillmentUserName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setFulfillmentUserName(final String value) {
    setAttributeInternal(FULFILLMENTUSERNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setFulfillmentUser
  /**
   ** Sets the attribute value for <code>FULFILLMENTUSER</code> using the alias
   ** name <code>fulfillmentUser</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>FULFILLMENTUSER</code> using the alias
   **                            name <code>fulfillmentUser</code>.
   **                            Allowed display is {@link String}.
   */
  public void setFulfillmentUser(final String value) {
    setAttributeInternal(FULFILLMENTUSER, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getFulfillmentUser
  /**
   ** Returns the attribute value for <code>FULFILLMENTUSER</code> using the
   ** alias name <code>fulfillmentUser</code>.
   **
   ** @return                    the attribute value for
   **                            <code>FULFILLMENTUSER</code> using the alias
   **                            name <code>fulfillmentUser</code>.
   **                            Possible display is {@link String}.
   */
  public String getFulfillmentUser() {
    return (String)getAttributeInternal(FULFILLMENTUSER);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getFulfillmentUserName
  /**
   ** Returns the attribute value for <code>FULFILLMENTUSERNAME</code> using
   *** the alias name <code>fulfillmentUserName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>FULFILLMENTUSERNAME</code> using the
   **                            alias name <code>fulfillmentUserName</code>.
   **                            Possible display is {@link String}.
   */
  public String getFulfillmentUserName() {
    return (String)getAttributeInternal(FULFILLMENTUSERNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setFulfillmentUserDisplayName
  /**
   ** Sets the attribute value for <code>FULFILLMENTUSERDISPLAYNAME</code> using
   ** the alias name <code>fulfillmentUserDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>FULFILLMENTUSERDISPLAYNAME</code> using
   **                            the alias name
   **                            <code>fulfillmentUserDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setFulfillmentUserDisplayName(final String value) {
    setAttributeInternal(FULFILLMENTUSERDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getFulfillmentUserDisplayName
  /**
   ** Returns the attribute value for <code>FULFILLMENTUSERDISPLAYNAME</code>
   ** using the alias name <code>fulfillmentUserDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>FULFILLMENTUSERDISPLAYNAME</code> using
   **                            the alias name
   **                            <code>fulfillmentUserDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getFulfillmentUserDisplayName() {
    return (String)getAttributeInternal(FULFILLMENTUSERDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setFulfillmentRole
  /**
   ** Sets the attribute value for <code>FULFILLMENTROLE</code> using the alias
   ** name <code>fulfillmentRole</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>FULFILLMENTROLE</code> using the alias
   **                            name <code>fulfillmentRole</code>.
   **                            Allowed display is {@link String}.
   */
  public void setFulfillmentRole(final String value) {
    setAttributeInternal(FULFILLMENTROLE, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getFulfillmentRole
  /**
   ** Returns the attribute value for <code>FULFILLMENTROLE</code> using the
   ** alias name <code>fulfillmentRole</code>.
   **
   ** @return                    the attribute value for
   **                            <code>FULFILLMENTROLE</code> using the alias
   **                            name <code>fulfillmentRole</code>.
   **                            Possible display is {@link String}.
   */
  public String getFulfillmentRole() {
    return (String)getAttributeInternal(FULFILLMENTROLE);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setFulfillmentRoleName
  /**
   ** Sets the attribute value for <code>FULFILLMENTROLENAME</code> using the
   ** alias name <code>fulfillmentRoleName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>FULFILLMENTROLENAME</code> using the
   **                            alias name <code>fulfillmentRoleName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setFulfillmentRoleName(final String value) {
    setAttributeInternal(FULFILLMENTROLENAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getFulfillmentRoleName
  /**
   ** Returns the attribute value for <code>FULFILLMENTROLENAME</code> using the
   ** alias name <code>fulfillmentRoleName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>FULFILLMENTROLENAME</code> using the
   **                            alias name <code>fulfillmentRoleName</code>.
   **                            Possible display is {@link String}.
   */
  public String getFulfillmentRoleName() {
    return (String)getAttributeInternal(FULFILLMENTROLENAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setFulfillmentRoleDisplayName
  /**
   ** Sets the attribute value for <code>FULFILLMENTROLEDISPLAYNAME</code> using
   ** the alias name <code>fulfillmentRoleDisplayName</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>FULFILLMENTROLEDISPLAYNAME</code> using
   **                            the alias name
   **                            <code>fulfillmentRoleDisplayName</code>.
   **                            Allowed display is {@link String}.
   */
  public void setFulfillmentRoleDisplayName(final String value) {
    setAttributeInternal(FULFILLMENTROLEDISPLAYNAME, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getFulfillmentRoleDisplayName
  /**
   ** Returns the attribute value for <code>FULFILLMENTROLEDISPLAYNAME</code>
   ** using the alias name <code>fulfillmentRoleDisplayName</code>.
   **
   ** @return                    the attribute value for
   **                            <code>FULFILLMENTROLEDISPLAYNAME</code> using
   **                            the alias name
   **                            <code>fulfillmentRoleDisplayName</code>.
   **                            Possible display is {@link String}.
   */
  public String getFulfillmentRoleDisplayName() {
    return (String)getAttributeInternal(FULFILLMENTROLEDISPLAYNAME);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setTags
  /**
   ** Sets the attribute value for <code>TAGS</code> using the alias name
   ** <code>tags</code>.
   **
   ** @param  value              the attribute value for <code>TAGS</code>
   **                            using the alias name <code>tags</code>.
   **                            Allowed display is {@link String}.
   */
  public void setTags(final String value) {
    setAttributeInternal(TAGS, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getTags
  /**
   ** Returns the attribute value for <code>TAGS</code> using the alias name
   ** <code>tags</code>.
   **
   ** @return                    the attribute value for <code>TAGS</code>
   **                            using the alias name <code>tags</code>.
   **                            Possible display is {@link String}.
   */
  public String getTags() {
    return (String)getAttributeInternal(TAGS);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   setUserTags
  /**
   ** Sets the attribute value for <code>USERTAGS</code> using the alias
   ** name <code>userTags</code>.
   **
   ** @param  value              the attribute value for
   **                            <code>USERTAGS</code> using the alias
   **                            name <code>userTags</code>.
   **                            Allowed display is {@link String}.
   */
  public void setUserTags(final String value) {
    setAttributeInternal(USERTAGS, value);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methode:   getUserTags
  /**
   ** Returns the attribute value for <code>USERTAGS</code> using the
   ** alias name <code>userTags</code>.
   **
   ** @return                    the attribute value for
   **                            <code>USERTAGS</code> using the alias
   **                            name <code>userTags</code>.
   **                            Possible display is {@link String}.
   */
  public String getUserTags() {
    return (String)getAttributeInternal(USERTAGS);
  }
}