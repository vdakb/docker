/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Authorization Management

    File        :   ReportParameterEOImpl.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    ReportParameterEOImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysauthz.model.entity;

import oracle.jbo.Row;
import oracle.jbo.server.EntityDefImpl;

import oracle.iam.ui.platform.model.common.DataProvider;
import oracle.iam.ui.platform.model.common.ModelAdapterBean;
import oracle.iam.ui.platform.model.common.OIMProgrammaticEO;

import oracle.iam.identity.sysauthz.schema.DataProviderFactory;
import oracle.iam.identity.sysauthz.schema.ReportParameterAdapter;

import oracle.jbo.Key;

////////////////////////////////////////////////////////////////////////////////
// class ReportParameterEOImpl
// ~~~~~ ~~~~~~~~~~~~~~~~~~~~~
/**
 ** The <code>Entity Object</code> to coordinate representations of database
 ** rows belonging to Report Parameters.
 ** <p>
 ** An <code>Entity Object</code> provides an object-oriented representation of
 ** the data it caches from a database object, such as a table or view. Database
 ** rows are presented as individual Entities, in which attributes typically
 ** correspond to columns in the corresponding table.
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** --- Tue Mar 07 19:41:42 CET 2017
 ** --- Custom code may be added to this class.
 ** --- Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public class ReportParameterEOImpl extends OIMProgrammaticEO {

  //////////////////////////////////////////////////////////////////////////////
  // static attributes
  //////////////////////////////////////////////////////////////////////////////

  private static EntityDefImpl definition;

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs an empty <code>ReportParameterEOImpl</code> values object that
   ** allows use as a JavaBean.
   ** <br>
   ** Zero argument constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public ReportParameterEOImpl() {
    // ensure inheritance
    super();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methods of abstract base classes
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   toAdapterBean (OIMProgrammaticEO)
  /**
   ** Factory method to create an instance of {@link ReportParameterAdapter}
   ** which populates its attribute values from the specified {@link Row}.
   **
   ** @param  row                the record providing the raw data.
   **
   ** @return                    an instance of {@link ReportParameterAdapter}.
   */
  @Override
  public ModelAdapterBean toAdapterBean(final Row row) {
    return new ReportParameterAdapter(row);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   getDataProvider (OIMProgrammaticEO)
  /**
   ** Factory method to create an instance of a proper {@link DataProvider}.
   **
   ** @return                    an instance of {@link DataProvider}.
   */
  @Override
  public DataProvider<? extends ModelAdapterBean> getDataProvider() {
    return DataProviderFactory.createReportParameterDataProvider();
  }

  //////////////////////////////////////////////////////////////////////////////
  // Methods grouped by functionality
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   createPrimaryKey
  /**
   ** Factory method to create a primary row identifier.
   ** <p>
   ** Users should not modify keys: JDeveloper treats keys as if they are
   ** immutable.
   ** <p>
   ** Call getObjectKey() on a row object to get its primary identifier.
   **
   ** @param  path               the value to embed in the primary key.
   **                            Allowed object is {@link String}.
   ** @param  name               the value to embed in the primary key.
   **                            Allowed object is {@link String}.
   **
   ** @return                    a {@link Key} object based on given key
   **                            constituents.
   */
  public static Key createPrimaryKey(final String path, final String name) {
    return new Key(new Object[] {path, name});
  }

  //////////////////////////////////////////////////////////////////////////////
  // Method:   getDefinitionObject
  /**
   ** Returns the named Entity Object definition for client authorization
   ** groups.
   ** <p>
   ** This method use the fully qualified name
   ** <code>oracle.iam.identity.sysauthz.model.entity.ReportParameterEO</code>
   ** to get the entity definition from <code>MetaObjectManager</code> and
   ** returns the corresponding Entity definition object.
   **
   ** @return                    the entity definition object corresponding to
   **                            the fully qualified name
   **                            <code>oracle.iam.identity.sysauthz.model.entity.ReportParameterEO</code>
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (definition == null || definition.isDirty())
      definition = EntityDefImpl.findDefObject("oracle.iam.identity.sysauthz.model.entity.ReportParameterEO");

    return definition;
  }
}