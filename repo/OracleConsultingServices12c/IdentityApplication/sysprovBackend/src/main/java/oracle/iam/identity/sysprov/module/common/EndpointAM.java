/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2017. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Oracle Identity Frontend Extension
    Subsystem   :   System Provisioning Management

    File        :   EndpointAM.java

    Compiler    :   Oracle JDeveloper 12c

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the interface
                    EndpointAM.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    2.0.0.0     2017-03-06  DSteding    First release version
*/

package oracle.iam.identity.sysprov.module.common;

import java.util.Map;

import oracle.jbo.ApplicationModule;

////////////////////////////////////////////////////////////////////////////////
// class EndpointAM
// ~~~~~ ~~~~~~~~~~
/**
 ** The <code>Application Module</code> to coordinate the particular task
 ** belonging to <code>IT Resource</code>s.
 ** <p>
 ** ---------------------------------------------------------------------
 ** ---    File generated by Oracle ADF Business Components Design Time.
 ** ---    Mon Mar 20 14:49:55 CET 2017
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 2.0.0.0
 ** @since   2.0.0.0
 */
public interface EndpointAM extends ApplicationModule {

  //////////////////////////////////////////////////////////////////////////////
  // Methods grouped by functionality
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByIdentifier
  /**
   ** Finds a certain <code>IT Resource</code> by executing a query against the
   ** persistence layer which leverage the primary key of the entity object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>IT Resource</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link Long}.
   */
  void fetchByIdentifier(final Long identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchByName
  /**
   ** Finds a certain <code>IT Resource</code> by executing a query against the
   ** persistence layer which leverage the unique key of the entity object.
   **
   ** @param  name               the unique identifier of the
   **                            <code>IT Resource</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link String}.
   */
  void fetchByName(final String name);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   createDetail
  /**
   ** Initialize the model to create a new <code>IT Resource</code>.
   */
  void createDetail();

  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchDetail
  /**
   ** Initialize the model to maintain an existing <code>IT Resource</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>IT Resource</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link Long}.
   */
  void fetchDetail(final Long identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshAttribute
  /**
   ** Refresh the attributes belonging to a certain <code>IT Resource</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>IT Resource</code> to initialize.
   **                            Allowed object is {@link Long}.
   */
  void refreshAttribute(final Long identifier);

  //////////////////////////////////////////////////////////////////////////////
  // Method:   requeryParameter
  /**
   ** Refresh the <code>Parameter</code>s belonging to a certain
   ** <code>IT Resource</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>IT Resource</code> to query.
   **                            Allowed object is {@link Long}.
   ** @param  pending            the collection of pending changes belonging to
   **                            added, deleted and modified values.
   */
  void requeryParameter(final Long identifier, final Map<String, Map<String, Object>> pending);


  //////////////////////////////////////////////////////////////////////////////
  // Method:   requeryAdministrator
  /**
   ** Refresh the <code>Administrator</code>s belonging to a certain
   ** <code>IT Resource</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>IT Resource</code> to query.
   **                            Allowed object is {@link Long}.
   ** @param  pending            the collection of pending changes belonging to
   **                            added, deleted and modified values.
   */
  void requeryAdministrator(final Long identifier, final Map<String, Map<String, Object>> pending);
}