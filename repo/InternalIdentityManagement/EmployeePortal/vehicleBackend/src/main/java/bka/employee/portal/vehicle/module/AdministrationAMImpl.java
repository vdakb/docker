/*
    Oracle Deutschland GmbH

    This software is the confidential and proprietary information of
    Oracle Corporation. ("Confidential Information").  You shall not
    disclose such Confidential Information and shall use it only in
    accordance with the terms of the license agreement you entered
    into with Oracle.

    ORACLE MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
    SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT. ORACLE SHALL NOT BE LIABLE FOR ANY DAMAGES
    SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
    THIS SOFTWARE OR ITS DERIVATIVES.

    Copyright Â© 2020. All Rights reserved

    -----------------------------------------------------------------------

    System      :   Employee Self Service Portal
    Subsystem   :   Vehicle Backend Model Component

    File        :   AdministrationAMImpl.java

    Compiler    :   Oracle JDeveloper 11g

    Author      :   dieter.steding@oracle.com

    Purpose     :   This file implements the class
                    AdministrationAMImpl.


    Revisions   Date        Editor      Comment
    -----------+-----------+-----------+-----------------------------------
    1.0.0.0     2020-02-23  DSteding    First release version
*/

package bka.employee.portal.vehicle.module;

import bka.employee.portal.vehicle.model.view.BrandVOImpl;
import bka.employee.portal.vehicle.model.view.ColorVOImpl;
import bka.employee.portal.vehicle.model.view.TypeVOImpl;
import bka.employee.portal.vehicle.module.common.AdministrationAM;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.server.ApplicationModuleImpl;

////////////////////////////////////////////////////////////////////////////////
// class AdministrationAMImpl
// ~~~~~ ~~~~~~~~~~~~~~~~~~~~
/**
 ** The local {@link ApplicationModuleImpl} to coordinate certain task belonging
 ** to Employee Portal Vehicle Management.
 ** <p>
 ** ---------------------------------------------------------------------
 ** --- File generated by Oracle ADF Business Components Design Time.
 ** ---    Fri Feb 23 12:08:29 CET 2018
 ** --- Custom code may be added to this class.
 ** --- Warning: Do not modify method signatures of generated methods.
 ** ---------------------------------------------------------------------
 ** @author  dieter.steding@oracle.com
 ** @version 1.0.0.0
 ** @since   1.0.0.0
 */
public class AdministrationAMImpl extends    ApplicationModuleImpl
                                  implements AdministrationAM {

  //////////////////////////////////////////////////////////////////////////////
  // Constructors
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   Ctor
  /**
   ** Constructs a <code>AdministrationAMImpl</code> application module that
   ** allows use as a JavaBean.
   ** <br>
   ** Zero argumment constructor required by the framework.
   ** <br>
   ** Default Constructor
   */
  public AdministrationAMImpl() {
    // ensure inheritance
    super();
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Methods grouped by functionality
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Method:   detailBrandView
  /**
   ** Container's getter for <code>BrandVOO</code>.
   **
   ** @return                    the implementation of view object
   **                            <code>Vehicule Manufactor Brand</code>.
   */
  private BrandVOImpl detailBrandView() {
    return (BrandVOImpl)findViewObject("BrandDetailVO");
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchBrandByIdentifier (AdministrationAM)
  /**
   ** Finds a certain  <code>Vehicle Manufactor Brand</code> by executing a
   ** query against the persistence layer which leverage the primary key of the
   ** entity object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Vehicle Manufactor Brand</code> to fetch
   **                            from the persistence layer.
   **                            Allowed object is {@link String}.
   */
  @Override
  public void fetchBrandByIdentifier(final String identifier) {
    final BrandVOImpl view = detailBrandView(); 
    view.removeViewCriteria("BrandDetailsSearchViewCriteria");
    final ViewCriteria vc = view.createViewCriteria();
    vc.setName("BrandDetailsSearchViewCriteria");
    final ViewCriteriaRow vcr = vc.createViewCriteriaRow();
    vcr.setAttribute("id", identifier);
    vcr.setOperator("id", "=");
    vc.add(vcr);
    view.applyViewCriteria(vc);
    view.executeQuery();
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshBrandAttribute
  /**
   ** Refresh the attributes belonging to a certain
   ** <code>Vehicle Manufactor Brand</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Vehicle Manufactor Brand</code> to
   **                            initialize.
   **                            Allowed object is {@link Long}.
   */
  @Override
  public void refreshBrandAttribute(final Long identifier) {
    final BrandVOImpl view = detailBrandView();
    view.reset();
    view.executeQuery();
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   detailBrandView
  /**
   ** Container's getter for <code>BrandVOO</code>.
   **
   ** @return                    the implementation of view object
   **                            <code>Vehicule Manufactor Brand</code>.
   */
  private ColorVOImpl detailColorView() {
    return (ColorVOImpl)findViewObject("ColorDetailVO");
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchBrandByIdentifier (AdministrationAM)
  /**
   ** Finds a certain  <code>Vehicle Color</code> by executing a query against
   ** the persistence layer which leverage the primary key of the entity object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Vehicle Color</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link String}.
   */
  @Override
  public void fetchColorByIdentifier(final String identifier) {
    final ColorVOImpl view = detailColorView(); 
    view.removeViewCriteria("ColorDetailsSearchViewCriteria");
    final ViewCriteria vc = view.createViewCriteria();
    vc.setName("ColorDetailsSearchViewCriteria");
    final ViewCriteriaRow vcr = vc.createViewCriteriaRow();
    vcr.setAttribute("id", identifier);
    vcr.setOperator("id", "=");
    vc.add(vcr);
    view.applyViewCriteria(vc);
    view.executeQuery();
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshColorAttribute
  /**
   ** Refresh the attributes belonging to a certain
   ** <code>Vehicle Color</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Vehicle Color</code> to
   **                            initialize.
   **                            Allowed object is {@link Long}.
   */
  @Override
  public void refreshColorAttribute(final Long identifier) {
    final ColorVOImpl view = detailColorView();
    view.reset();
    view.executeQuery();
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   detailBrandView
  /**
   ** Container's getter for <code>TypeVOO</code>.
   **
   ** @return                    the implementation of view object
   **                            <code>Vehicule Type</code>.
   */
  private TypeVOImpl detailTypeView() {
    return (TypeVOImpl)findViewObject("TypeDetailVO");
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   fetchTypeByIdentifier (AdministrationAM)
  /**
   ** Finds a certain  <code>Vehicle Type</code> by executing a query against
   ** the persistence layer which leverage the primary key of the entity object.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Vehicle Type</code> to fetch from the
   **                            persistence layer.
   **                            Allowed object is {@link String}.
   */
  @Override
  public void fetchTypeByIdentifier(final String identifier) {
    final TypeVOImpl view = detailTypeView(); 
    view.removeViewCriteria("TypeDetailsSearchViewCriteria");
    final ViewCriteria vc = view.createViewCriteria();
    vc.setName("TypeDetailsSearchViewCriteria");
    final ViewCriteriaRow vcr = vc.createViewCriteriaRow();
    vcr.setAttribute("id", identifier);
    vcr.setOperator("id", "=");
    vc.add(vcr);
    view.applyViewCriteria(vc);
    view.executeQuery();
  }
  
  //////////////////////////////////////////////////////////////////////////////
  // Method:   refreshTypeAttribute
  /**
   ** Refresh the attributes belonging to a certain
   ** <code>Vehicle Type</code>.
   **
   ** @param  identifier         the system identifier of the
   **                            <code>Vehicle Type</code> to
   **                            initialize.
   **                            Allowed object is {@link Long}.
   */
  @Override
  public void refreshTypeAttribute(final Long identifier) {
    final TypeVOImpl view = detailTypeView();
    view.reset();
    view.executeQuery();
  }
}
